{"version":3,"file":"static/js/933.93827a2f.chunk.js","mappings":"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","sources":["api/api.js","pages/Events.styled.js","pages/View.jsx"],"sourcesContent":["// api.js\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://66430a433c01a059ea213b70.mockapi.io/api';\n\nexport const getEvents = async (page, make) => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  if (page) {\n    url.searchParams.append('page', page);\n  }\n  url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n\nexport const getViews = async (page, make) => {\n  const url = new URL('/users', axios.defaults.baseURL);\n  // if (page) {\n  //   url.searchParams.append('page', page);\n  // }\n  // url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const postViews = async userData => {\n  // Принимаем объект userData с данными пользователя\n  const { fullName, email, dateOfBirth, whereHeard, event } = userData; // Извлекаем данные из userData\n\n  // Преобразуем registerId в массив, если он представлен строкой\n\n  const url = new URL('/users', axios.defaults.baseURL);\n  // if (page) {\n  //   url.searchParams.append('page', page);\n  // }\n  // url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.post(url.toString(), {\n      fullName: fullName,\n      email: email,\n      dateOfBirth: dateOfBirth,\n      whereHeard: whereHeard,\n      event: event,\n    });\n\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const getAllEvents = async () => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  // if (page) {\n  //   url.searchParams.append('page', page);\n  // }\n  // url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n","import styled from 'styled-components';\nconst DivEvents = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  justify-content: center;\n`;\nconst DivEvent = styled.div`\n  border: 1px solid black;\n  width: 290px;\n  padding: 16px;\n`;\n\nconst DivRegisterView = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst H1 = styled.h1`\n  /* position: absolute; */\n  left: 420px;\n  top: 400px;\n  font-size: 24px;\n\n  margin: 0 0 20px 0;\n  padding-left: 12px;\n`;\n\nconst H2 = styled.h2``;\nconst P = styled.p`\n  margin-bottom: 50px;\n`;\n\nconst Section = styled.main`\n  position: relative;\n`;\nconst DivPagination = styled.div`\n  margin-top: 30px;\n  text-align: center;\n  padding-bottom: 80px;\n`;\n\nconst PaginationButton = styled.button`\n  padding: 5px 10px;\n  margin: 0 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background-color: transparent;\n  color: black;\n  cursor: pointer;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  &:hover:not(:disabled) {\n    background-color: #f0f0f0;\n  }\n`;\n\nconst SpanPagination = styled.span`\n  margin: 0 10px;\n`;\n\nexport {\n  SpanPagination,\n  DivEvents,\n  DivEvent,\n  DivRegisterView,\n  H1,\n  H2,\n  P,\n  Section,\n  DivPagination,\n  PaginationButton,\n};\n","// View.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { H1, Section } from \"./Events.styled\";\nimport { getViews } from \"api/api\";\nconst View = () => {\n  // const location = useLocation();\n  const { viewId } = useParams(); // Получаем id из URL\n  const [views, setViews] = useState([]);\n  console.log(viewId);\n  const fetchViews = async (page) => {\n    try {\n      const results = await getViews();\n\n      console.log(results);\n\n      // Фильтруем просмотры, чтобы отобразить только те, которые относятся к выбранному мероприятию\n      const filteredViews = results.filter((view) =>\n        view.event.includes(viewId)\n      );\n      setViews(filteredViews);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchViews();\n    // eslint-disable-next-line\n  }, [viewId]);\n\n  return (\n    <>\n      <Section>\n        <H1>\"Awesome Event\" participants</H1>\n        <Link to=\"/\">Вернуться назад на домашнюю страницу</Link>\n      </Section>\n      {views && views.length > 0 ? (\n        views.map((view, index) => (\n          <div key={index}>\n            <p>Name: {view.fullName}</p>\n            <p>Email: {view.email}</p>\n            {/* Другие данные о пользователе */}\n          </div>\n        ))\n      ) : (\n        <p>No views found</p>\n      )}\n    </>\n  );\n};\n\nexport default View;\n"],"names":["axios","getEvents","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","page","make","url","response","_context","prev","next","URL","searchParams","append","toString","sent","abrupt","data","t0","console","error","message","stop","_x","_x2","apply","arguments","getViews","_ref2","_callee2","_context2","_x3","_x4","postViews","_ref3","_callee3","userData","fullName","email","dateOfBirth","whereHeard","event","_context3","_x5","getAllEvents","_ref4","_callee4","_context4","DivEvents","styled","_templateObject","_taggedTemplateLiteral","DivEvent","_templateObject2","DivRegisterView","_templateObject3","H1","_templateObject4","H2","_templateObject5","P","_templateObject6","Section","_templateObject7","DivPagination","_templateObject8","PaginationButton","_templateObject9","SpanPagination","_templateObject10","viewId","useParams","_useState","useState","_useState2","_slicedToArray","views","setViews","log","fetchViews","results","filteredViews","filter","view","includes","useEffect","_jsxs","_Fragment","children","_jsx","Link","to","length","map","index"],"sourceRoot":""}