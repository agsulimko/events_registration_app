{"version":3,"file":"static/js/762.b72ce787.chunk.js","mappings":"mQAEAA,EAAAA,EAAAA,SAAAA,QAAyB,kDAElB,IAeMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,EAAMC,GAAM,IAAAC,EAAAC,EAAA,OAAAL,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAQzC,OAPKJ,EAAM,IAAIK,IAAI,UAAWb,EAAAA,EAAAA,SAAAA,SAC3BM,GACFE,EAAIM,aAAaC,OAAO,OAAQT,GAElCE,EAAIM,aAAaC,OAAO,QAAS,IAC7BR,GACFC,EAAIM,aAAaC,OAAO,SAAUR,GACnCG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGwBZ,EAAAA,EAAAA,IAAUQ,EAAIQ,YAAY,KAAD,EAAlC,OAARP,EAAQC,EAAAO,KAAAP,EAAAQ,OAAA,SAEPT,EAASU,MAAI,QAEoC,MAFpCT,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAEpBW,QAAQC,MAAM,0BAA2BZ,EAAAU,GAAMG,SAASb,EAAAU,GAAA,yBAAAV,EAAAc,OAAA,GAAAnB,EAAA,mBAG3D,gBAlBqBoB,EAAAC,GAAA,OAAAxB,EAAAyB,MAAA,KAAAC,UAAA,KAoBTC,EAAQ,eAAAC,GAAA3B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA2B,IAAA,IAAAvB,EAAAC,EAAA,OAAAL,IAAAA,MAAA,SAAA4B,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAC+B,OAA/CJ,EAAM,IAAIK,IAAI,SAAUb,EAAAA,EAAAA,SAAAA,SAAuBgC,EAAArB,KAAA,EAAAqB,EAAApB,KAAA,EAG5BZ,EAAAA,EAAAA,IAAUQ,EAAIQ,YAAY,KAAD,EAAlC,OAARP,EAAQuB,EAAAf,KAAAe,EAAAd,OAAA,SAEPT,EAASU,MAAI,OAEmC,MAFnCa,EAAArB,KAAA,EAAAqB,EAAAZ,GAAAY,EAAA,SAEpBX,QAAQC,MAAM,yBAA0BU,EAAAZ,GAAMG,SAASS,EAAAZ,GAAA,yBAAAY,EAAAR,OAAA,GAAAO,EAAA,kBAG1D,kBAXoB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAaRK,EAAS,eAAAC,GAAA/B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA+B,EAAMC,GAAQ,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjC,EAAAC,EAAA,OAAAL,IAAAA,MAAA,SAAAsC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,OAEgB,OAD7CyB,EAAoDD,EAApDC,SAAUC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,YAAaC,EAAsBJ,EAAtBI,WAAYC,EAAUL,EAAVK,MAC5CjC,EAAM,IAAIK,IAAI,SAAUb,EAAAA,EAAAA,SAAAA,SAAuB0C,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAG5BZ,EAAAA,EAAAA,KAAWQ,EAAIQ,WAAY,CAChDqB,SAAUA,EACVC,MAAOA,EACPC,YAAaA,EACbC,WAAYA,EACZC,MAAOA,IACN,KAAD,EANY,OAARhC,EAAQiC,EAAAzB,KAAAyB,EAAAxB,OAAA,SAQPT,EAASU,MAAI,OAEmC,MAFnCuB,EAAA/B,KAAA,EAAA+B,EAAAtB,GAAAsB,EAAA,SAEpBrB,QAAQC,MAAM,yBAA0BoB,EAAAtB,GAAMG,SAASmB,EAAAtB,GAAA,yBAAAsB,EAAAlB,OAAA,GAAAW,EAAA,kBAG1D,gBAlBqBQ,GAAA,OAAAT,EAAAP,MAAA,KAAAC,UAAA,I,sNClDhBgB,EAAMC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8DAKhBC,EAAYH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gHAOtBG,EAAWL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yEAMrBK,EAAkBP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+DAK5BO,EAAKT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2EAOdS,EAAKX,EAAAA,GAAAA,GAASY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,QACdW,EAAIb,EAAAA,GAAAA,EAAQc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,kCAIZa,EAAUf,EAAAA,GAAAA,QAAcgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,QAgCxBe,GA/BgBjB,EAAAA,GAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,+EAMPF,EAAAA,GAAAA,OAAamB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,+YAsBfF,EAAAA,GAAAA,KAAWoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,6BAGfF,EAAAA,GAAAA,OAAaqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,gRAgB1BoB,EAAYtB,EAAAA,GAAAA,IAAUuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,oKAStBsB,EAAgBxB,EAAAA,GAAAA,IAAUyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,kE,GAMRF,EAAAA,GAAAA,OAAa0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,+SAIxB,SAAAyB,GAAK,OAAKA,EAAMC,QAAU,QAAU,MAAM,I,QC+FjDC,GAAmB7B,EAAAA,EAAAA,IAAO8B,EAAAA,GAAP9B,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oIAa/B6B,EAAkB/B,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+SAIxB,SAACyB,GAAK,OAAMA,EAAMK,SAAW,QAAU,MAAM,IA4K1D,EA9Je,WACb,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAsCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA4BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCnF,EAAMoF,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAAwCZ,EAAAA,EAAAA,WAAS,GAAMa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA8BhB,EAAAA,EAAAA,WAAS,GAAMiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA8BpB,EAAAA,EAAAA,WAAS,GAAKqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0CxB,EAAAA,EAAAA,WAAS,GAAMyB,GAAAvB,EAAAA,EAAAA,GAAAsB,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAgC5B,EAAAA,EAAAA,WAAS,GAAM6B,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAW,eAAAC,GAAA/G,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA+G,EAAO7G,EAAMC,GAAM,IAAA6G,EAAAC,EAAAC,EAAA1F,UAAA,OAAAxB,IAAAA,MAAA,SAAAmH,GAAA,cAAAA,EAAA5G,KAAA4G,EAAA3G,MAAA,OACpB,OADsBwG,EAAKE,EAAAE,OAAA,QAAAC,IAAAH,EAAA,IAAAA,EAAA,GAC5ClB,GAAW,GAAMmB,EAAA5G,KAAA,EAAA4G,EAAA3G,KAAA,GAEOX,EAAAA,EAAAA,IAAUK,EAAMC,GAAQ,KAAD,GAAvC8G,EAAOE,EAAAtG,MACDuG,OAAS,EACnBnC,GAAU,SAACqC,GAAU,OACnBN,EAAQC,EAAO,GAAAM,QAAAC,EAAAA,EAAAA,GAAOF,IAAUE,EAAAA,EAAAA,GAAKP,GAAQ,IAG/Cb,GAAW,GACZe,EAAA3G,KAAA,gBAAA2G,EAAA5G,KAAA,EAAA4G,EAAAnG,GAAAmG,EAAA,SAEDlG,QAAQwG,IAAIN,EAAAnG,GAAIG,SAAS,QAEP,OAFOgG,EAAA5G,KAAA,GAEzByF,GAAW,GAAOmB,EAAAO,OAAA,6BAAAP,EAAA/F,OAAA,GAAA2F,EAAA,wBAErB,gBAhBgBY,EAAAtG,GAAA,OAAAyF,EAAAvF,MAAA,KAAAC,UAAA,MAkBjBoG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAA/H,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGF,OAFjByE,EAAU,IACVI,EAAe,GACfe,GAAW,GAAM9F,EAAAE,KAAA,EACXqG,GAAY,EAAG1G,GAAQ,GAAM,KAAD,mBAAAG,EAAAc,OAAA,GAAAnB,EAAA,KACnC,kBALiB,OAAAH,EAAAyB,MAAA,KAAAC,UAAA,KAMlBqG,GAEF,GAAG,CAAC1H,EAAQwF,KAEZiC,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAe,WAEjBC,OAAOC,YAAcC,SAASC,gBAAgBC,WAC5CF,SAASC,gBAAgBE,aAAe,MACzCrC,GACDI,GAEAd,GAAe,SAACgD,GAAQ,OAAKA,EAAW,CAAC,IAEvCN,OAAOO,QAAU,IACnB1B,GAAY,GAEZA,GAAY,GAEVmB,OAAOO,QAAU,IACnB9B,GAAiB,GAEjBA,GAAiB,EAErB,EAGA,OADAuB,OAAOQ,iBAAiB,SAAUT,GAC3B,kBAAMC,OAAOS,oBAAoB,SAAUV,EAAc,CAClE,GAAG,CAAC/B,EAASI,KAEbyB,EAAAA,EAAAA,YAAU,WACJxC,EAAc,GAChByB,GAAYzB,EAAajF,EAG7B,GAAG,CAACiF,IAuBJ,OACEqD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACpF,EAAO,CAAAmF,SAAA,EACNF,EAAAA,EAAAA,KAACjG,EAAG,CAAAmG,UACFC,EAAAA,EAAAA,MAAC7E,EAAS,CACR8E,MAAO,CAAEC,SAAU,SACnBC,UAAWpC,EAAW,WAAa,GAAGgC,SAAA,EAEtCC,EAAAA,EAAAA,MAAC3E,EAAa,CAAA0E,SAAA,EACZF,EAAAA,EAAAA,KAACvF,EAAE,CAAAyF,SAAC,YACJF,EAAAA,EAAAA,KAAC/E,EAAU,CAACsF,QA/BE,WACxBxD,EAAU,QACZ,EA6BmDmD,SAAC,mBACxCF,EAAAA,EAAAA,KAAC/E,EAAU,CAACsF,QA5BI,WAC1BxD,EAAU,YACZ,EA0BqDmD,SAAC,wBAG1CF,EAAAA,EAAAA,KAAC/E,EAAU,CAACsF,QA3BM,WAC5BxD,EAAU,YACZ,EAyBuDmD,SAAC,0BAI9CF,EAAAA,EAAAA,KAAC/E,EAAU,CAACsF,QA3BK,WACzBpD,GAAgB,SAACqD,GAAS,OAAMA,CAAS,IACzCzD,EAAU,GACZ,EAwBkDmD,SAAC,wBAI7CC,EAAAA,EAAAA,MAAChG,EAAS,CAACmG,UAAW,aAAaJ,SAAA,CAChC3D,GAAUA,EAAOoC,OAAS,EACzBpC,EAAOkE,KAAI,SAAC7G,EAAO8G,GAAK,OACtBP,EAAAA,EAAAA,MAAC9F,EAAQ,CAAaiG,UAAW,gBAAgBJ,SAAA,EAC/CF,EAAAA,EAAAA,KAACrF,EAAE,CAAAuF,SAAEtG,EAAM+G,SACXX,EAAAA,EAAAA,KAACnF,EAAC,CAAAqF,SAAEtG,EAAMgH,eACVT,EAAAA,EAAAA,MAAC5F,EAAe,CAAA2F,SAAA,EACdF,EAAAA,EAAAA,KAACnE,EAAgB,CACfgF,GAAE,aAAA/B,OAAelF,EAAMkH,IACvBC,MAAO,CACLC,KAAM/E,EACN0E,MAAO/G,EAAM+G,OACbT,SACH,cAIDF,EAAAA,EAAAA,KAACnE,EAAgB,CACfgF,GAAE,SAAA/B,OAAWlF,EAAMkH,IACnBC,MAAO,CACLC,KAAM/E,EACN0E,MAAO/G,EAAM+G,OACbT,SACH,cApBUQ,EAwBJ,KAGbV,EAAAA,EAAAA,KAAA,KAAAE,SAAG,oBAEJ5C,IAAW0C,EAAAA,EAAAA,KAAA,KAAAE,SAAG,+BAEjBF,EAAAA,EAAAA,KAACjE,EAAe,CAACC,SAAU8B,EAAeyC,QA5DxB,WACtBjB,OAAO2B,SAAS,CAAEC,IAAK,EAAGC,SAAU,UACtC,EA0DyEjB,SAAC,eAM5E,C","sources":["api/api.js","pages/Events.styled.js","pages/Events.jsx"],"sourcesContent":["// api.js\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://66430a433c01a059ea213b70.mockapi.io/api';\n\nexport const getAllEvents = async sortBy => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  if (sortBy) {\n    url.searchParams.append('sortBy', sortBy);\n  }\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n\nexport const getEvents = async (page, sortBy) => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  if (page) {\n    url.searchParams.append('page', page);\n  }\n  url.searchParams.append('limit', 40);\n  if (sortBy) {\n    url.searchParams.append('sortBy', sortBy);\n  }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n\nexport const getViews = async () => {\n  const url = new URL('/users', axios.defaults.baseURL);\n\n  try {\n    const response = await axios.get(url.toString());\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const postViews = async userData => {\n  const { fullName, email, dateOfBirth, whereHeard, event } = userData;\n  const url = new URL('/users', axios.defaults.baseURL);\n\n  try {\n    const response = await axios.post(url.toString(), {\n      fullName: fullName,\n      email: email,\n      dateOfBirth: dateOfBirth,\n      whereHeard: whereHeard,\n      event: event,\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const patchViews = async (id, event) => {\n  const url = new URL(`/users/${id}`, axios.defaults.baseURL);\n\n  try {\n    const response = await axios.patch(url.toString(), {\n      // fullName: fullName,\n      // email: email,\n      // dateOfBirth: dateOfBirth,\n      // whereHeard: whereHeard,\n      event: event,\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\n// // Fetch registrations for a specific event\n// export const getRegistrations = async eventId => {\n//   const url = new URL(\n//     `/events/${eventId}/registrations`,\n//     axios.defaults.baseURL\n//   );\n\n//   try {\n//     const response = await axios.get(url.toString());\n//     console.log(response.data);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Failed to fetch registrations:', error.message);\n\n//     throw error;\n//   }\n// };\n\n// Fetch registrations for a specific event\n\nexport const getRegistrations = async () => {\n  const url = new URL('/users', axios.defaults.baseURL);\n\n  try {\n    const response = await axios.get(url.toString());\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\n// export const getRegistrations = async eventId => {\n//   const url = new URL(`/users/${eventId}`, axios.defaults.baseURL);\n\n//   try {\n//     const response = await axios.get(url.toString());\n//     const data = response.data;\n\n//     // Check if data is an array\n//     if (Array.isArray(data)) {\n//       console.log(data);\n//       return data;\n//     } else if (typeof data === 'object') {\n//       // If data is an object, convert it to an array\n//       console.warn(\n//         'Received a single object instead of an array. Converting to array:',\n//         data\n//       );\n//       const dataArray = [data];\n//       console.log(dataArray);\n//       return dataArray;\n//     } else {\n//       // If data is neither an array nor an object, handle the error\n//       console.error(\n//         'Invalid data format - expected an array or an object:',\n//         data\n//       );\n//       throw new Error('Invalid data format');\n//     }\n//   } catch (error) {\n//     console.error('Failed to fetch registrations:', error.message);\n//     throw error;\n//   }\n// };\n","import styled from 'styled-components';\n\nconst Div = styled.div`\n  padding-top: 75px;\n\n  background-color: white;\n`;\nconst DivEvents = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  justify-content: center;\n  padding-top: 65px;\n`;\nconst DivEvent = styled.div`\n  border: 1px solid black;\n  width: 290px;\n  padding: 16px;\n`;\n\nconst DivRegisterView = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst H1 = styled.h1`\n  left: 420px;\n  top: 400px;\n  font-size: 24px;\n  margin: 0;\n`;\n\nconst H2 = styled.h2``;\nconst P = styled.p`\n  margin-bottom: 50px;\n`;\n\nconst Section = styled.section``;\nconst DivPagination = styled.div`\n  margin-top: 30px;\n  text-align: center;\n  padding-bottom: 80px;\n`;\n\nconst PaginationButton = styled.button`\n  padding: 5px 10px;\n  margin: 0 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  /* background-color: transparent;\n  color: black; */\n  background-color: #3470ff;\n  color: #ffffff;\n  cursor: pointer;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  &:hover:not(:disabled) {\n    /* background-color: #f0f0f0; */\n    background-color: #0b44cd;\n  }\n`;\n\nconst SpanPagination = styled.span`\n  margin: 0 10px;\n`;\nconst ButtonSort = styled.button`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  /* line-height: 143%; */\n  border-radius: 5px;\n\n  width: 136px;\n  height: 48px;\n  background-color: #3470ff;\n  color: #ffffff;\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\nconst DivButton = styled.div`\n  display: flex;\n  padding-right: 460px;\n\n  background-color: rgba(255, 255, 255, 0.9);\n  gap: 200px;\n  align-items: center;\n  padding-left: 10px;\n`;\nconst DivSortButton = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 50px;\n`;\n\nconst BackToTopButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  display: ${props => (props.visible ? 'block' : 'none')};\n  background-color: #3470ff;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  cursor: pointer;\n  font-size: 24px;\n  line-height: 50px;\n  text-align: center;\n  z-index: 1000;\n`;\n\nexport {\n  SpanPagination,\n  DivEvents,\n  DivEvent,\n  DivRegisterView,\n  H1,\n  H2,\n  P,\n  Section,\n  DivPagination,\n  PaginationButton,\n  ButtonSort,\n  DivButton,\n  DivSortButton,\n  Div,\n  BackToTopButton,\n};\n","// infinite scroll pagination (бесконечная прокрутка страниц)\n\n// import React, { useState, useEffect } from \"react\";\n// import { Link, useLocation } from \"react-router-dom\";\n// import styled from \"styled-components\";\n// import { getEvents } from \"api/api\";\n// import {\n//   H1,\n//   Section,\n//   DivEvents,\n//   DivEvent,\n//   DivRegisterView,\n//   H2,\n//   P,\n//   DivButton,\n//   ButtonSort,\n//   DivSortButton,\n// BackToTopButton\n// } from \"./Events.styled\";\n\n// const LinkRegisterView = styled(Link)`\n//   color: #3470ff;\n//   font-weight: 600;\n\n//   &:hover {\n//     color: #0b44cd;\n//   }\n\n//   &:focus {\n//     color: #0b44cd;\n//   }\n// `;\n\n// const Events = () => {\n//   const location = useLocation();\n//   const [events, setEvents] = useState([]);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [sortBy, setSortBy] = useState(\"\");\n//   const [resetFilters, setResetFilters] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [hasMore, setHasMore] = useState(true);\n//   const [showBackToTop, setShowBackToTop] = useState(false);\n\n//   const fetchEvents = async (page, sortBy) => {\n//     setLoading(true);\n//     try {\n//       const results = await getEvents(page, sortBy);\n//       if (results.length > 0) {\n//         setEvents((prevEvents) => [...prevEvents, ...results]);\n//       } else {\n//         setHasMore(false); // No more events to load\n//       }\n//     } catch (err) {\n//       console.log(err.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     const initialFetch = async () => {\n//       setEvents([]);\n//       setCurrentPage(1);\n//       setHasMore(true);\n//       await fetchEvents(1, sortBy);\n//     };\n//     initialFetch();\n//     // eslint-disable-next-line\n//   }, [sortBy, resetFilters]);\n\n//   useEffect(() => {\n//     const handleScroll = () => {\n//       if (\n//         window.innerHeight + document.documentElement.scrollTop >=\n//           document.documentElement.offsetHeight - 100 &&\n//         !loading &&\n//         hasMore\n//       ) {\n//         setCurrentPage((prevPage) => prevPage + 1);\n//       }\n//       if (window.scrollY > 300) {\n//         setShowBackToTop(true);\n//       } else {\n//         setShowBackToTop(false);\n//       }\n//     };\n\n//     window.addEventListener(\"scroll\", handleScroll);\n//     return () => window.removeEventListener(\"scroll\", handleScroll);\n//   }, [loading, hasMore]);\n\n//   useEffect(() => {\n//     if (currentPage > 1) {\n//       fetchEvents(currentPage, sortBy);\n//     }\n//     // eslint-disable-next-line\n//   }, [currentPage]);\n\n//   const handleSortByTitle = () => {\n//     setSortBy(\"title\");\n//   };\n\n//   const handleSortEventDate = () => {\n//     setSortBy(\"eventdate\");\n//   };\n\n//   const handleSortByOrganizer = () => {\n//     setSortBy(\"organizer\");\n//   };\n\n//   const handleResetFilters = () => {\n//     setResetFilters((prevState) => !prevState);\n//     setSortBy(\"\");\n//   };\n\n//   const handleBackToTop = () => {\n//     window.scrollTo({ top: 0, behavior: \"smooth\" });\n//   };\n\n//   return (\n//     <Section>\n//       <H1>Events</H1>\n//       <DivButton>\n//         <DivSortButton>\n//           <ButtonSort onClick={handleSortByTitle}>Sort by title</ButtonSort>\n//           <ButtonSort onClick={handleSortEventDate}>\n//             Sort by event date\n//           </ButtonSort>\n//           <ButtonSort onClick={handleSortByOrganizer}>\n//             Sort by organizer\n//           </ButtonSort>\n//         </DivSortButton>\n//         <ButtonSort onClick={handleResetFilters}>Reset Filters</ButtonSort>\n//       </DivButton>\n\n//       <DivEvents className={\"css.events\"}>\n//         {events && events.length > 0 ? (\n//           events.map((event, index) => (\n//             <DivEvent key={index} className={\"css.event_div\"}>\n//               <H2>{event.title}</H2>\n//               <P>{event.description}</P>\n//               <DivRegisterView>\n//                 <LinkRegisterView\n//                   to={`/register/${event.id}`}\n//                   state={{\n//                     from: location,\n//                     title: event.title,\n//                   }}\n//                 >\n//                   Register\n//                 </LinkRegisterView>\n\n//                 <LinkRegisterView\n//                   to={`/view/${event.id}`}\n//                   state={{\n//                     from: location,\n//                     title: event.title,\n//                   }}\n//                 >\n//                   View\n//                 </LinkRegisterView>\n//               </DivRegisterView>\n//             </DivEvent>\n//           ))\n//         ) : (\n//           <p>No events found</p>\n//         )}\n//         {loading && <p>Loading more events...</p>}\n//       </DivEvents>\n//       <BackToTopButton visible={showBackToTop} onClick={handleBackToTop}>\n//         ↑\n//       </BackToTopButton>\n//     </Section>\n//   );\n// };\n\n// export default Events;\n\n// ===============================\n// pagination (c пагинацией)\n// Events.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getEvents } from \"api/api\";\nimport {\n  H1,\n  Section,\n  DivEvents,\n  DivEvent,\n  DivRegisterView,\n  H2,\n  P,\n  DivButton,\n  ButtonSort,\n  DivSortButton,\n  Div,\n} from \"./Events.styled\";\n\nconst LinkRegisterView = styled(Link)`\n  color: #3470ff;\n  font-weight: 600;\n\n  &:hover {\n    color: #0b44cd;\n  }\n\n  &:focus {\n    color: #0b44cd;\n  }\n`;\n\nconst BackToTopButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  display: ${(props) => (props.$visible ? \"block\" : \"none\")};\n  background-color: #3470ff;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  cursor: pointer;\n  font-size: 24px;\n  line-height: 50px;\n  text-align: center;\n  z-index: 1000;\n`;\n\nconst Events = () => {\n  const location = useLocation();\n  const [events, setEvents] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortBy, setSortBy] = useState(\"\");\n  const [resetFilters, setResetFilters] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [showBackToTop, setShowBackToTop] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n\n  const fetchEvents = async (page, sortBy, reset = false) => {\n    setLoading(true);\n    try {\n      const results = await getEvents(page, sortBy);\n      if (results.length > 0) {\n        setEvents((prevEvents) =>\n          reset ? results : [...prevEvents, ...results]\n        );\n      } else {\n        setHasMore(false); // No more events to load\n      }\n    } catch (err) {\n      console.log(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const initialFetch = async () => {\n      setEvents([]);\n      setCurrentPage(1);\n      setHasMore(true);\n      await fetchEvents(1, sortBy, true);\n    };\n    initialFetch();\n    // eslint-disable-next-line\n  }, [sortBy, resetFilters]);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (\n        window.innerHeight + document.documentElement.scrollTop >=\n          document.documentElement.offsetHeight - 100 &&\n        !loading &&\n        hasMore\n      ) {\n        setCurrentPage((prevPage) => prevPage + 1);\n      }\n      if (window.scrollY > 100) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n      if (window.scrollY > 300) {\n        setShowBackToTop(true);\n      } else {\n        setShowBackToTop(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [loading, hasMore]);\n\n  useEffect(() => {\n    if (currentPage > 1) {\n      fetchEvents(currentPage, sortBy);\n    }\n    // eslint-disable-next-line\n  }, [currentPage]);\n\n  const handleSortByTitle = () => {\n    setSortBy(\"title\");\n  };\n\n  const handleSortEventDate = () => {\n    setSortBy(\"eventdate\");\n  };\n\n  const handleSortByOrganizer = () => {\n    setSortBy(\"organizer\");\n  };\n\n  const handleResetFilters = () => {\n    setResetFilters((prevState) => !prevState);\n    setSortBy(\"\");\n  };\n\n  const handleBackToTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  return (\n    <>\n      <Section>\n        <Div>\n          <DivButton\n            style={{ position: \"fixed\" }}\n            className={scrolled ? \"scrolled\" : \"\"}\n          >\n            <DivSortButton>\n              <H1>Events</H1>\n              <ButtonSort onClick={handleSortByTitle}>Sort by title</ButtonSort>\n              <ButtonSort onClick={handleSortEventDate}>\n                Sort by event date\n              </ButtonSort>\n              <ButtonSort onClick={handleSortByOrganizer}>\n                Sort by organizer\n              </ButtonSort>\n            </DivSortButton>\n            <ButtonSort onClick={handleResetFilters}>Reset Filters</ButtonSort>\n          </DivButton>\n        </Div>\n\n        <DivEvents className={\"css.events\"}>\n          {events && events.length > 0 ? (\n            events.map((event, index) => (\n              <DivEvent key={index} className={\"css.event_div\"}>\n                <H2>{event.title}</H2>\n                <P>{event.description}</P>\n                <DivRegisterView>\n                  <LinkRegisterView\n                    to={`/register/${event.id}`}\n                    state={{\n                      from: location,\n                      title: event.title,\n                    }}\n                  >\n                    Register\n                  </LinkRegisterView>\n\n                  <LinkRegisterView\n                    to={`/view/${event.id}`}\n                    state={{\n                      from: location,\n                      title: event.title,\n                    }}\n                  >\n                    View\n                  </LinkRegisterView>\n                </DivRegisterView>\n              </DivEvent>\n            ))\n          ) : (\n            <p>No events found</p>\n          )}\n          {loading && <p>Loading more events...</p>}\n        </DivEvents>\n        <BackToTopButton $visible={showBackToTop} onClick={handleBackToTop}>\n          ↑\n        </BackToTopButton>\n      </Section>\n    </>\n  );\n};\n\nexport default Events;\n"],"names":["axios","getEvents","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee2","page","sortBy","url","response","_context2","prev","next","URL","searchParams","append","toString","sent","abrupt","data","t0","console","error","message","stop","_x2","_x3","apply","arguments","getViews","_ref3","_callee3","_context3","postViews","_ref4","_callee4","userData","fullName","email","dateOfBirth","whereHeard","event","_context4","_x4","Div","styled","_templateObject","_taggedTemplateLiteral","DivEvents","_templateObject2","DivEvent","_templateObject3","DivRegisterView","_templateObject4","H1","_templateObject5","H2","_templateObject6","P","_templateObject7","Section","_templateObject8","ButtonSort","_templateObject9","_templateObject10","_templateObject11","_templateObject12","DivButton","_templateObject13","DivSortButton","_templateObject14","_templateObject15","props","visible","LinkRegisterView","Link","BackToTopButton","$visible","location","useLocation","_useState","useState","_useState2","_slicedToArray","events","setEvents","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","setSortBy","_useState7","_useState8","resetFilters","setResetFilters","_useState9","_useState10","loading","setLoading","_useState11","_useState12","hasMore","setHasMore","_useState13","_useState14","showBackToTop","setShowBackToTop","_useState15","_useState16","scrolled","setScrolled","fetchEvents","_ref","_callee","reset","results","_args","_context","length","undefined","prevEvents","concat","_toConsumableArray","log","finish","_x","useEffect","initialFetch","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","prevPage","scrollY","addEventListener","removeEventListener","_jsx","_Fragment","children","_jsxs","style","position","className","onClick","prevState","map","index","title","description","to","id","state","from","scrollTo","top","behavior"],"sourceRoot":""}