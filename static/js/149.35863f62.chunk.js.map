{"version":3,"file":"static/js/149.35863f62.chunk.js","mappings":"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","sources":["api/api.js","pages/Register.styled.js","pages/Register.jsx"],"sourcesContent":["// api.js\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://66430a433c01a059ea213b70.mockapi.io/api';\n\nexport const getAllEvents = async sortBy => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  if (sortBy) {\n    url.searchParams.append('sortBy', sortBy);\n  }\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n\nexport const getEvents = async (page, sortBy) => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  if (page) {\n    url.searchParams.append('page', page);\n  }\n  url.searchParams.append('limit', 40);\n  if (sortBy) {\n    url.searchParams.append('sortBy', sortBy);\n  }\n\n  try {\n    const response = await axios.get(url.toString());\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\nexport const postEvents = async userData => {\n  const { title, description, eventdate, organizer } = userData;\n  const url = new URL('/users', axios.defaults.baseURL);\n\n  try {\n    const response = await axios.post(url.toString(), {\n      title: title,\n      description: description,\n      eventdate: eventdate,\n      organizer: organizer,\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const getViews = async () => {\n  const url = new URL('/users', axios.defaults.baseURL);\n\n  try {\n    const response = await axios.get(url.toString());\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const postViews = async userData => {\n  const { fullName, email, dateOfBirth, whereHeard, event } = userData;\n  const url = new URL('/users', axios.defaults.baseURL);\n\n  try {\n    const response = await axios.post(url.toString(), {\n      fullName: fullName,\n      email: email,\n      dateOfBirth: dateOfBirth,\n      whereHeard: whereHeard,\n      event: event,\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const putViews = async (id, event) => {\n  const url = new URL(`/users/${id}`, axios.defaults.baseURL);\n\n  try {\n    const response = await axios.put(url.toString(), {\n      event: event,\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n  font-size: 24px;\n  /* margin: 40px 0 40px 0; */\n  padding-top: 50px;\n`;\nconst H2 = styled.h1`\n  margin-top: 100px;\n\n  text-align: center;\n`;\nconst H3 = styled.h1`\n  text-align: center;\n  font-size: 22px;\n  margin-bottom: 100px;\n`;\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Form = styled.form`\n  font-size: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n\n  &:last-child {\n    margin-bottom: 20px;\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-top: 5px;\n`;\n\nconst RadioInput = styled.div`\n  display: flex;\n  align-items: center;\n\n  input {\n    margin-right: 5px;\n  }\n`;\n\nconst Button = styled.button`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  /* line-height: 143%; */\n  border-radius: 5px;\n  padding: 14px 44px;\n  width: 136px;\n  height: 48px;\n  background-color: #3470ff;\n  color: #ffffff;\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\n\nconst DivButton = styled.div`\n  display: flex;\n\n  align-items: center;\n  justify-content: space-around;\n`;\nconst DivLink = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 100px;\n`;\nconst SuccessMessage = styled.div`\n  color: green;\n`;\nconst DivRadioInput = styled.div`\n  display: flex;\n  gap: 50px;\n  margin-top: 20px;\n  margin-bottom: 40px;\n`;\nconst DivForm = styled.div`\n  width: 450px;\n`;\n\nexport {\n  H1,\n  H2,\n  H3,\n  Section,\n  Form,\n  Label,\n  Input,\n  RadioInput,\n  Button,\n  SuccessMessage,\n  DivRadioInput,\n  DivForm,\n  DivButton,\n  DivLink,\n};\n","// Register.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport {\n  H1,\n  H2,\n  H3,\n  Section,\n  Form,\n  Label,\n  Input,\n  RadioInput,\n  Button,\n  SuccessMessage,\n  DivRadioInput,\n  DivForm,\n  DivButton,\n  DivLink,\n} from \"./Register.styled\";\nimport { getViews, putViews, postViews } from \"api/api\";\nimport styled from \"styled-components\";\nimport { toast } from \"react-hot-toast\";\n\nconst LinkCancel = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #3470ff;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  border-radius: 5px;\n  width: 136px;\n  height: 48px;\n  background-color: #3470ff;\n  color: #ffffff;\n\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\n\nconst LinkReturn = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #3470ff;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  border-radius: 5px;\n  width: 136px;\n  height: 48px;\n  background-color: #3470ff;\n  color: #ffffff;\n\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\n\nconst Register = () => {\n  const location = useLocation();\n  const { registerId } = useParams();\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    email: \"\",\n    dateOfBirth: \"\",\n    whereHeard: \"\",\n    event: [registerId],\n  });\n  const [success, setSuccess] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [views, setViews] = useState([]);\n  const [alleViews, setAlleViews] = useState([]);\n  // const [filteredAlleEmail, setFilteredAlleEmail] = useState([]);\n  const [futureDate, setFutureDate] = useState(false);\n  const { title } = location.state;\n\n  const fetchViews = async () => {\n    try {\n      const results = await getViews();\n      // console.log(results);\n      setAlleViews(results);\n\n      setViews(results.filter((view) => view.event.includes(registerId)));\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchViews();\n    // eslint-disable-next-line\n  }, [registerId]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n\n    if (name === \"email\") {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(value)) {\n        setErrors({ ...errors, [name]: \"Invalid email address\" });\n      } else {\n        setErrors({ ...errors, [name]: \"\" });\n      }\n    }\n\n    if (name === \"dateOfBirth\") {\n      const currentDate = new Date().toISOString().split(\"T\")[0];\n      console.log(currentDate);\n      const selectedDate = value;\n      const currentDateObj = new Date(currentDate);\n      const selectedDateObj = new Date(selectedDate);\n      const differenceInMs =\n        selectedDateObj.getTime() - currentDateObj.getTime();\n      if (differenceInMs > 0) {\n        setErrors({\n          ...errors,\n          [name]: \"Date of birth cannot be in the future\",\n        });\n        setFutureDate(true);\n      } else {\n        setErrors({\n          ...errors,\n          [name]: \"   \",\n        });\n        setFutureDate(false);\n      }\n    }\n  };\n  const handleRegisterAnotherUser = () => {\n    // Сбрасываем success обратно в false, чтобы снова отобразить форму регистрации\n\n    setSuccess(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(alleViews);\n    console.log(views);\n\n    console.log(formData.email);\n    const filteredAlleEmail = alleViews.filter(\n      (view) => view.email === formData.email\n    );\n\n    // setFilteredAlleEmail();\n    // console.log(filteredAlleEmail[0].event[0]);\n\n    const currentDate = new Date().toISOString().split(\"T\")[0];\n    const selectedDate = formData.dateOfBirth;\n\n    const currentDateObj = new Date(currentDate);\n    const selectedDateObj = new Date(selectedDate);\n    const differenceInMs = selectedDateObj.getTime() - currentDateObj.getTime();\n\n    // if (filteredAlleEmail.length > 0) {\n    //   toast.error(\"такой пльзователь уже есть\", {\n    //     duration: 5000,\n    //   });\n    //   return;\n    // }\n    if (differenceInMs > 0) {\n      toast.error(\"Date of birth cannot be in the future.\", {\n        duration: 5000,\n      });\n      return;\n    }\n\n    const filteredEmail = views.filter((view) => view.email === formData.email);\n\n    if (filteredEmail.length > 0) {\n      toast.error(\"User with this email is already registered.\", {\n        duration: 5000,\n      });\n      return;\n    }\n    console.log(filteredAlleEmail.length);\n    if (filteredAlleEmail.length === 1) {\n      try {\n        const userId = filteredAlleEmail[0].id;\n        await putViews(userId, [...filteredAlleEmail[0].event, registerId]);\n        setSuccess(true);\n        toast.success(\"User event updated successfully\", { duration: 5000 });\n      } catch (error) {\n        toast.error(`Failed to update user events: ${error.message}`, {\n          duration: 5000,\n        });\n        console.error(\"Failed to update user events:\", error.message);\n      }\n      return;\n    }\n\n    const validationErrors = {};\n    Object.entries(formData).forEach(([key, value]) => {\n      if (!value) {\n        validationErrors[key] = `${key} is required`;\n      }\n    });\n\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    try {\n      const userData = { ...formData, event: [registerId] };\n      await postViews(userData);\n      setSuccess(true);\n      toast.success(\"Successfully adding a user!\", {\n        duration: 4000,\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"colored\",\n      });\n      toast.success(\"Thank you for registering.\", {\n        duration: 4000,\n\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"colored\",\n      });\n    } catch (error) {\n      toast.error(`Failed to submit registration: ${error.message}`, {\n        duration: 1500,\n        position: \"top-right\",\n        autoClose: 5000,\n      });\n      console.error(\"Failed to submit registration:\", error.message);\n    }\n  };\n\n  return (\n    <>\n      {success ? (\n        <SuccessMessage>\n          <H2>Registration Successful!</H2>\n          <H3>Thank you for registering.</H3>\n          <DivLink>\n            <LinkReturn to=\"/\">Return to events</LinkReturn>\n            <Button onClick={handleRegisterAnotherUser} style={{ padding: 0 }}>\n              Register another\n              {/* Register another user for this event */}\n            </Button>\n          </DivLink>\n        </SuccessMessage>\n      ) : (\n        <Section>\n          <H1>\n            Event registration <span style={{ color: \"#3470ff\" }}>{title}</span>\n          </H1>\n          <Form onSubmit={handleSubmit}>\n            <DivForm>\n              <Label>\n                Full Name\n                <Input\n                  type=\"text\"\n                  name=\"fullName\"\n                  value={formData.fullName}\n                  onChange={handleChange}\n                  // pattern=\"^[a-zA-ZÀ-ÿ'-]+( [a-zA-ZÀ-ÿ'-]+)*$\"\n                  placeholder=\"Anna Perfler\"\n                  required\n                />\n                {errors.fullName && <span>{errors.fullName}</span>}\n              </Label>\n              <Label>\n                Email\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  placeholder=\"ivanov@gmail.com\"\n                  required\n                />\n                {errors.email && <span>{errors.email}</span>}\n              </Label>\n              <Label>\n                Date of Birth\n                <Input\n                  type=\"date\"\n                  name=\"dateOfBirth\"\n                  value={formData.dateOfBirth}\n                  onChange={handleChange}\n                  required\n                  style={{ color: futureDate ? \"red\" : \"inherit\" }}\n                />\n                <div style={{ height: 20 }}>\n                  {errors.dateOfBirth && (\n                    <span style={{ color: \"red\" }}>{errors.dateOfBirth}</span>\n                  )}\n                  {!errors.dateOfBirth && <span>&nbsp;</span>}\n                </div>\n              </Label>\n            </DivForm>\n\n            <Label>\n              Where did you hear about this event?\n              <DivRadioInput>\n                <RadioInput>\n                  <input\n                    type=\"radio\"\n                    name=\"whereHeard\"\n                    value=\"Social media\"\n                    checked={formData.whereHeard === \"Social media\"}\n                    onChange={handleChange}\n                    required\n                  />\n                  <span>Social media</span>\n                </RadioInput>\n                <RadioInput>\n                  <input\n                    type=\"radio\"\n                    name=\"whereHeard\"\n                    value=\"Friends\"\n                    checked={formData.whereHeard === \"Friends\"}\n                    onChange={handleChange}\n                    required\n                  />\n                  <span>Friends</span>\n                </RadioInput>\n                <RadioInput>\n                  <input\n                    type=\"radio\"\n                    name=\"whereHeard\"\n                    value=\"Found myself\"\n                    checked={formData.whereHeard === \"Found myself\"}\n                    onChange={handleChange}\n                    required\n                  />\n                  <span>Found myself</span>\n                </RadioInput>\n              </DivRadioInput>\n            </Label>\n            <DivButton>\n              <Button type=\"submit\">Ok</Button>\n              <LinkCancel to=\"/\">\n                <p>Cancel</p>\n              </LinkCancel>\n            </DivButton>\n          </Form>\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["axios","getEvents","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee2","page","sortBy","url","response","_context2","prev","next","URL","searchParams","append","toString","sent","abrupt","data","t0","console","error","message","stop","_x2","_x3","apply","arguments","getViews","_ref4","_callee4","_context4","postViews","_ref5","_callee5","userData","fullName","email","dateOfBirth","whereHeard","event","_context5","_x5","putViews","_ref6","_callee6","id","_context6","concat","_x6","_x7","H1","styled","_templateObject","_taggedTemplateLiteral","H2","_templateObject2","H3","_templateObject3","Section","_templateObject4","Form","_templateObject5","Label","_templateObject6","Input","_templateObject7","RadioInput","_templateObject8","Button","_templateObject9","DivButton","_templateObject10","DivLink","_templateObject11","SuccessMessage","_templateObject12","DivRadioInput","_templateObject13","DivForm","_templateObject14","LinkCancel","Link","LinkReturn","location","useLocation","registerId","useParams","_useState","useState","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","success","setSuccess","_useState5","_useState6","errors","setErrors","_useState7","_useState8","views","setViews","_useState9","_useState10","alleViews","setAlleViews","_useState11","_useState12","futureDate","setFutureDate","title","state","fetchViews","_ref","_callee","results","_context","filter","view","includes","log","useEffect","handleChange","e","_e$target","target","name","value","_objectSpread","_defineProperty","test","currentDate","Date","toISOString","split","selectedDate","currentDateObj","getTime","handleSubmit","filteredAlleEmail","selectedDateObj","userId","validationErrors","preventDefault","toast","duration","length","_toConsumableArray","Object","entries","forEach","_ref3","key","keys","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","t1","_x","_jsx","_Fragment","children","_jsxs","to","onClick","style","padding","color","onSubmit","type","onChange","placeholder","required","height","checked"],"sourceRoot":""}