{"version":3,"file":"static/js/161.acbc79b7.chunk.js","mappings":"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","sources":["api/api.js","pages/Events.module.css","pages/Events.jsx","pages/Events.styled.js"],"sourcesContent":["// api.js\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://66430a433c01a059ea213b70.mockapi.io/api';\n\nexport const getEvents = async (page, make) => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  if (page) {\n    url.searchParams.append('page', page);\n  }\n  url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n\nexport const getViews = async (page, make) => {\n  const url = new URL('/users', axios.defaults.baseURL);\n  // if (page) {\n  //   url.searchParams.append('page', page);\n  // }\n  // url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const postViews = async userData => {\n  // Принимаем объект userData с данными пользователя\n  const { fullName, email, dateOfBirth, whereHeard, event } = userData; // Извлекаем данные из userData\n\n  // Преобразуем registerId в массив, если он представлен строкой\n\n  const url = new URL('/users', axios.defaults.baseURL);\n  // if (page) {\n  //   url.searchParams.append('page', page);\n  // }\n  // url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.post(url.toString(), {\n      fullName: fullName,\n      email: email,\n      dateOfBirth: dateOfBirth,\n      whereHeard: whereHeard,\n      event: event,\n    });\n\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const getAllEvents = async () => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  // if (page) {\n  //   url.searchParams.append('page', page);\n  // }\n  // url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","// Events.jsx\nimport { getAllEvents, getEvents } from \"api/api\";\nimport {\n  H1,\n  Section,\n  DivEvents,\n  DivEvent,\n  DivRegisterView,\n  H2,\n  P,\n  DivPagination,\n  SpanPagination,\n  PaginationButton,\n} from \"./Events.styled\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport css from \"./Events.module.css\";\nimport styled from \"styled-components\";\nconst LinkRegisterView = styled(Link)`\n  color: #3470ff;\n  font-weight: 600;\n\n  &:hover {\n    color: #0b44cd;\n  }\n\n  &:focus {\n    color: #0b44cd;\n    outline: none;\n  }\n`;\n\nconst Events = () => {\n  const location = useLocation();\n  const [events, setEvents] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [lengthArray, setLengthArray] = useState(0);\n\n  const fetchAllEvents = async (page) => {\n    try {\n      const results = await getAllEvents();\n\n      // const { results, total_pages } = await getEvents(page);\n\n      // const { results, total_pages } = await getEvents(page);\n      // lengthArray / results.length;\n\n      console.log(results.length);\n      setLengthArray(results.length);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n  // useEffect(() => {\n  //   fetchAllEvents();\n  // }, []);\n  const fetchEvents = async (page) => {\n    try {\n      const results = await getEvents(page);\n      // const { total_pages } = await getEvents(page);\n      // const { results, total_pages } = await getEvents(page);\n\n      // const { results, total_pages } = await getEvents(page);\n      // console.log(total_pages);\n      //   console.log(results);\n      setEvents(results);\n      setTotalPages(Math.ceil(lengthArray / results.length));\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchAllEvents();\n    fetchEvents(currentPage);\n    // eslint-disable-next-line\n  }, [currentPage, totalPages]);\n\n  const handleNextPage = () => {\n    setCurrentPage((prevPage) => prevPage + 1);\n  };\n  // const handleNextPage = () => {\n  //   if (currentPage < totalPages) {\n  //     setCurrentPage((prevPage) => Math.min(prevPage + 1, totalPages));\n  //   }\n  // };\n  const handlePrevPage = () => {\n    setCurrentPage((prevPage) => prevPage - 1);\n  };\n  // const handlePrevPage = () => {\n  //   if (currentPage > 1) {\n  //     setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\n  //   }\n  // };\n\n  return (\n    <>\n      <Section>\n        <H1>Events</H1>\n\n        <DivEvents className={css.events}>\n          {events && events.length > 0 ? (\n            events.map((event, index) => {\n              return (\n                <DivEvent key={index} className={css.event_div}>\n                  <H2>{event.title}</H2>\n                  <P>{event.description}</P>\n                  <DivRegisterView>\n                    <LinkRegisterView\n                      to={`/register/${event.id}`}\n                      state={{ from: location }}\n                    >\n                      Register\n                    </LinkRegisterView>\n                    <LinkRegisterView\n                      to={`/view/${event.id}`}\n                      state={{ from: location }}\n                    >\n                      View\n                    </LinkRegisterView>\n                  </DivRegisterView>\n                </DivEvent>\n              );\n            })\n          ) : (\n            <p>No events found</p>\n          )}\n        </DivEvents>\n        {/* <DivPagination className={css.pagination}>\n          <PaginationButton\n            onClick={handlePrevPage}\n            disabled={currentPage === 1}\n          >\n            Previous\n          </PaginationButton>\n          <SpanPagination className={css.span_pagination}>\n            Page {currentPage} {currentPage + 1} {currentPage + 2} ...{\" \"}\n            {totalPages - 1} {totalPages}\n          </SpanPagination>\n          <PaginationButton\n            onClick={handleNextPage}\n            disabled={currentPage === totalPages}\n          >\n            Next\n          </PaginationButton>\n        </DivPagination> */}\n        <DivPagination className={css.pagination}>\n          <PaginationButton\n            onClick={handlePrevPage}\n            disabled={currentPage === 1}\n          >\n            Previous\n          </PaginationButton>\n          <SpanPagination className={css.span_pagination}>\n            {Array.from({ length: totalPages }, (_, index) => (\n              <span\n                key={index}\n                style={{\n                  color: currentPage === index + 1 ? \"#3470ff\" : \"inherit\",\n                }}\n              >\n                {index + 1}\n                {index !== totalPages - 1 ? \" \" : \"\"}\n              </span>\n            ))}\n          </SpanPagination>\n          <PaginationButton\n            onClick={handleNextPage}\n            disabled={currentPage === totalPages}\n          >\n            Next\n          </PaginationButton>\n        </DivPagination>\n      </Section>\n    </>\n  );\n};\nexport default Events;\n","import styled from 'styled-components';\nconst DivEvents = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  justify-content: center;\n`;\nconst DivEvent = styled.div`\n  border: 1px solid black;\n  width: 290px;\n  padding: 16px;\n`;\n\nconst DivRegisterView = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst H1 = styled.h1`\n  /* position: absolute; */\n  left: 420px;\n  top: 400px;\n  font-size: 24px;\n\n  margin: 0 0 20px 0;\n  padding-left: 12px;\n`;\n\nconst H2 = styled.h2``;\nconst P = styled.p`\n  margin-bottom: 50px;\n`;\n\nconst Section = styled.main`\n  position: relative;\n`;\nconst DivPagination = styled.div`\n  margin-top: 30px;\n  text-align: center;\n  padding-bottom: 80px;\n`;\n\nconst PaginationButton = styled.button`\n  padding: 5px 10px;\n  margin: 0 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background-color: transparent;\n  color: black;\n  cursor: pointer;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  &:hover:not(:disabled) {\n    background-color: #f0f0f0;\n  }\n`;\n\nconst SpanPagination = styled.span`\n  margin: 0 10px;\n`;\n\nexport {\n  SpanPagination,\n  DivEvents,\n  DivEvent,\n  DivRegisterView,\n  H1,\n  H2,\n  P,\n  Section,\n  DivPagination,\n  PaginationButton,\n};\n"],"names":["axios","getEvents","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","page","make","url","response","_context","prev","next","URL","searchParams","append","toString","sent","abrupt","data","t0","console","error","message","stop","_x","_x2","apply","arguments","getViews","_ref2","_callee2","_context2","_x3","_x4","postViews","_ref3","_callee3","userData","fullName","email","dateOfBirth","whereHeard","event","_context3","_x5","getAllEvents","_ref4","_callee4","_context4","LinkRegisterView","styled","Link","_templateObject","_taggedTemplateLiteral","location","useLocation","_useState","useState","_useState2","_slicedToArray","events","setEvents","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","totalPages","setTotalPages","_useState7","_useState8","lengthArray","setLengthArray","fetchAllEvents","results","log","length","fetchEvents","Math","ceil","useEffect","_jsx","_Fragment","children","_jsxs","Section","H1","DivEvents","className","css","map","index","DivEvent","H2","title","P","description","DivRegisterView","to","concat","id","state","from","DivPagination","PaginationButton","onClick","prevPage","disabled","SpanPagination","Array","_","style","color","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10"],"sourceRoot":""}