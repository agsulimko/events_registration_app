{"version":3,"file":"static/js/149.0ff6da32.chunk.js","mappings":"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","sources":["api/api.js","pages/Register.styled.js","pages/Register.jsx"],"sourcesContent":["// api.js\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://66430a433c01a059ea213b70.mockapi.io/api';\n\nexport const getEvents = async (page, make) => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  if (page) {\n    url.searchParams.append('page', page);\n  }\n  url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n\nexport const getViews = async (page, make) => {\n  const url = new URL('/users', axios.defaults.baseURL);\n  // if (page) {\n  //   url.searchParams.append('page', page);\n  // }\n  // url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const postViews = async userData => {\n  // Принимаем объект userData с данными пользователя\n  const { fullName, email, dateOfBirth, whereHeard, event } = userData; // Извлекаем данные из userData\n\n  // Преобразуем registerId в массив, если он представлен строкой\n\n  const url = new URL('/users', axios.defaults.baseURL);\n  // if (page) {\n  //   url.searchParams.append('page', page);\n  // }\n  // url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.post(url.toString(), {\n      fullName: fullName,\n      email: email,\n      dateOfBirth: dateOfBirth,\n      whereHeard: whereHeard,\n      event: event,\n    });\n\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const getAllEvents = async () => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  // if (page) {\n  //   url.searchParams.append('page', page);\n  // }\n  // url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n  font-size: 24px;\n  margin: 40px 0 40px 0;\n`;\nconst H2 = styled.h1`\n  margin-top: 100px;\n  /* font-size: 24px;\n  margin: 40px 0 40px 0; */\n  text-align: center;\n`;\nconst H3 = styled.h1`\n  text-align: center;\n  font-size: 22px;\n  margin-bottom: 100px;\n`;\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Form = styled.form`\n  font-size: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n\n  &:last-child {\n    margin-bottom: 20px;\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-top: 5px;\n`;\n\nconst RadioInput = styled.div`\n  display: flex;\n  align-items: center;\n\n  input {\n    margin-right: 5px;\n  }\n`;\n\nconst Button = styled.button`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  /* line-height: 143%; */\n  border-radius: 5px;\n  padding: 14px 44px;\n  width: 136px;\n  height: 48px;\n  background-color: #3470ff;\n  color: #ffffff;\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\n\nconst DivButton = styled.div`\n  display: flex;\n  /* gap: 40px; */\n  align-items: center;\n  justify-content: space-around;\n`;\nconst DivLink = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 100px;\n`;\nconst SuccessMessage = styled.div`\n  color: green;\n`;\nconst DivRadioInput = styled.div`\n  display: flex;\n  gap: 50px;\n  margin-top: 20px;\n  margin-bottom: 40px;\n`;\nconst DivForm = styled.div`\n  /* display: flex; */\n  width: 450px;\n`;\n\nexport {\n  H1,\n  H2,\n  H3,\n  Section,\n  Form,\n  Label,\n  Input,\n  RadioInput,\n  Button,\n  SuccessMessage,\n  DivRadioInput,\n  DivForm,\n  DivButton,\n  DivLink,\n};\n","import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport {\n  H1,\n  H2,\n  H3,\n  Section,\n  Form,\n  Label,\n  Input,\n  RadioInput,\n  Button,\n  SuccessMessage,\n  DivRadioInput,\n  DivForm,\n  DivButton,\n  DivLink,\n} from \"./Register.styled\";\nimport { postViews } from \"api/api\";\nimport styled from \"styled-components\";\nimport { toast } from \"react-hot-toast\";\n\nconst LinkCancel = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #3470ff;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  /* line-height: 143%; */\n  border-radius: 5px;\n  /* padding: 14px 44px; */\n  width: 136px;\n  height: 48px;\n  background-color: #3470ff;\n  color: #ffffff;\n\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\n// const LinkRegister = styled(Link)`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   color: #3470ff;\n//   font-weight: 600;\n//   font-size: 14px;\n//   line-height: 1.43;\n//   /* line-height: 143%; */\n//   border-radius: 5px;\n//   /* padding: 14px 44px; */\n//   width: 136px;\n//   height: 48px;\n//   background-color: #3470ff;\n//   color: #ffffff;\n\n//   &:hover,\n//   &:focus {\n//     background-color: #0b44cd;\n//   }\n// `;\nconst LinkReturn = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #3470ff;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  /* line-height: 143%; */\n  border-radius: 5px;\n  /* padding: 14px 44px; */\n  width: 136px;\n  height: 48px;\n  background-color: #3470ff;\n  color: #ffffff;\n\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\nconst Register = () => {\n  const { registerId } = useParams();\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    email: \"\",\n    dateOfBirth: \"\",\n    whereHeard: \"\",\n    event: [registerId],\n  });\n  const [success, setSuccess] = useState(false);\n  const [errors, setErrors] = useState({});\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n    // Сброс ошибки, если поле было заполнено после ошибки\n    setErrors({\n      ...errors,\n      [name]: \"\",\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Проверка на пустые поля\n    const validationErrors = {};\n    Object.entries(formData).forEach(([key, value]) => {\n      if (!value) {\n        validationErrors[key] = `${key} is required`;\n      }\n    });\n\n    // Если есть ошибки валидации, устанавливаем их и прерываем отправку формы\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    try {\n      const userData = {\n        ...formData,\n        event: [registerId],\n      };\n\n      await postViews(userData);\n      setSuccess(true);\n      // toast.success(\"Successfully adding a  user!\", {\n      //   duration: 4000,\n      // });\n      toast.success(\"Successfully adding a  user!\", {\n        duration: 4000,\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"colored\",\n      });\n      // toast.success(\"Successfully adding a  user!\", toastifyOptions);\n\n      toast.success(\"Thank you for registering.\", {\n        duration: 4000,\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"colored\",\n      });\n    } catch (error) {\n      toast.error(\"Failed to submit registration:\", error.message, {\n        duration: 1500,\n        position: \"top-right\",\n        autoClose: 5000,\n      });\n      console.error(\"Failed to submit registration:\", error.message);\n    }\n  };\n\n  // };\n  if (success) {\n    return (\n      <SuccessMessage>\n        <H2>Registration Successful!</H2>\n        <H3>Thank you for registering.</H3>\n        <DivLink>\n          <LinkReturn to=\"/\">Return to events</LinkReturn>\n          {/* <LinkRegister to={`/events_registration_app/register/${registerId}`}>\n            Register more\n          </LinkRegister> */}\n        </DivLink>\n      </SuccessMessage>\n    );\n  }\n\n  return (\n    <Section>\n      <H1>Event registration</H1>\n      <Form onSubmit={handleSubmit}>\n        <DivForm>\n          <Label>\n            Full Name\n            <Input\n              type=\"text\"\n              name=\"fullName\"\n              value={formData.fullName}\n              onChange={handleChange}\n              pattern=\"/^[A-Z][a-z]{1,}$/\"\n              placeholder=\"Anna Perfler\"\n              required\n            />\n            {errors.fullName && <span>{errors.fullName}</span>}\n          </Label>\n          <Label>\n            Email\n            <Input\n              type=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              placeholder=\"ivanov@gmail.com\"\n              required\n            />\n            {errors.email && <span>{errors.email}</span>}\n          </Label>\n          <Label>\n            Date of Birth\n            <Input\n              type=\"date\"\n              name=\"dateOfBirth\"\n              value={formData.dateOfBirth}\n              onChange={handleChange}\n              required\n            />\n            {errors.dateOfBirth && <span>{errors.dateOfBirth}</span>}\n          </Label>\n        </DivForm>\n\n        <Label>\n          Where did you hear about this event?\n          <DivRadioInput>\n            <RadioInput>\n              <input\n                type=\"radio\"\n                name=\"whereHeard\"\n                value=\"Social media\"\n                checked={formData.whereHeard === \"Social media\"}\n                onChange={handleChange}\n                required\n              />\n              <span>Social media</span>\n            </RadioInput>\n            <RadioInput>\n              <input\n                type=\"radio\"\n                name=\"whereHeard\"\n                value=\"Friends\"\n                checked={formData.whereHeard === \"Friends\"}\n                onChange={handleChange}\n                required\n              />\n              <span>Friends</span>\n            </RadioInput>\n            <RadioInput>\n              <input\n                type=\"radio\"\n                name=\"whereHeard\"\n                value=\"Found myself\"\n                checked={formData.whereHeard === \"Found myself\"}\n                onChange={handleChange}\n                required\n              />\n              <span>Found myself</span>\n            </RadioInput>\n          </DivRadioInput>\n        </Label>\n        <DivButton>\n          <Button type=\"submit\">Ok</Button>\n          <LinkCancel to=\"/\">\n            <p>Cancel</p>\n          </LinkCancel>\n        </DivButton>\n      </Form>\n    </Section>\n  );\n};\n\nexport default Register;\n"],"names":["axios","getEvents","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","page","make","url","response","_context","prev","next","URL","searchParams","append","toString","sent","abrupt","data","t0","console","error","message","stop","_x","_x2","apply","arguments","getViews","_ref2","_callee2","_context2","_x3","_x4","postViews","_ref3","_callee3","userData","fullName","email","dateOfBirth","whereHeard","event","_context3","_x5","getAllEvents","_ref4","_callee4","_context4","H1","styled","_templateObject","_taggedTemplateLiteral","H2","_templateObject2","H3","_templateObject3","Section","_templateObject4","Form","_templateObject5","Label","_templateObject6","Input","_templateObject7","RadioInput","_templateObject8","Button","_templateObject9","DivButton","_templateObject10","DivLink","_templateObject11","SuccessMessage","_templateObject12","DivRadioInput","_templateObject13","DivForm","_templateObject14","LinkCancel","Link","LinkReturn","registerId","useParams","_useState","useState","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","success","setSuccess","_useState5","_useState6","errors","setErrors","handleChange","e","_e$target","target","name","value","_objectSpread","_defineProperty","handleSubmit","validationErrors","preventDefault","Object","entries","forEach","key","concat","keys","length","toast","duration","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","_jsxs","children","_jsx","to","onSubmit","type","onChange","pattern","placeholder","required","checked"],"sourceRoot":""}