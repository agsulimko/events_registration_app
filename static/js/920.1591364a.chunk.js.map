{"version":3,"file":"static/js/920.1591364a.chunk.js","mappings":"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","sources":["api/api.js","pages/Events.styled.js","api/apiEventyay.js","pages/Events.jsx"],"sourcesContent":["// api.js\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://66430a433c01a059ea213b70.mockapi.io/api';\n\n// export const postEventToResource = async event => {\n//   try {\n//     const response = await axios.post('/events', event);\n\n//     console.log('Event added:', response.data);\n//   } catch (error) {\n//     console.error('Error adding event:', error);\n//     throw error;\n//   }\n// };\n\nexport const getAllEvents = async sortBy => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  if (sortBy) {\n    url.searchParams.append('sortBy', sortBy);\n  }\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n\nexport const getEvents = async (page, sortBy) => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  if (page) {\n    url.searchParams.append('page', page);\n  }\n  url.searchParams.append('limit', 40);\n  if (sortBy) {\n    url.searchParams.append('sortBy', sortBy);\n  }\n\n  try {\n    const response = await axios.get(url.toString());\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\nexport const postEvents = async userData => {\n  const { title, description, eventdate, organizer } = userData;\n  const url = new URL('/users', axios.defaults.baseURL);\n\n  try {\n    const response = await axios.post(url.toString(), {\n      title: title,\n      description: description,\n      eventdate: eventdate,\n      organizer: organizer,\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const getViews = async () => {\n  const url = new URL('/users', axios.defaults.baseURL);\n\n  try {\n    const response = await axios.get(url.toString());\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const postViews = async userData => {\n  const { fullName, email, dateOfBirth, whereHeard, event } = userData;\n  const url = new URL('/users', axios.defaults.baseURL);\n\n  try {\n    const response = await axios.post(url.toString(), {\n      fullName: fullName,\n      email: email,\n      dateOfBirth: dateOfBirth,\n      whereHeard: whereHeard,\n      event: event,\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const putViews = async (id, event) => {\n  const url = new URL(`/users/${id}`, axios.defaults.baseURL);\n\n  try {\n    const response = await axios.put(url.toString(), {\n      event: event,\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const deleteEvent = async (id, event) => {\n  const url = new URL(`/events/${id}`, axios.defaults.baseURL);\n\n  try {\n    const response = await axios.delete(url.toString());\n\n    console.log('Event deleted:', response.data);\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      console.log(`Event with id ${id} not found, skipping deletion`);\n    } else {\n      console.error('Error deleting event:', error);\n\n      throw error;\n    }\n  }\n};\n\n// export const deleteEvent = async id => {\n//   try {\n//     await axios.delete(`/events/${id}`);\n//     console.log(`Event with id ${id} deleted`);\n//   } catch (error) {\n//     if (error.response && error.response.status === 404) {\n//       console.warn(`Event with id ${id} not found, skipping deletion`);\n//     } else {\n//       console.error('Error deleting event:', error);\n//       throw error;\n//     }\n//   }\n// };\n","import styled from 'styled-components';\n\nconst Div = styled.div`\n  padding-top: 55px;\n  background-color: white;\n`;\nconst DivEvents = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  justify-content: center;\n  padding-top: 90px;\n`;\nconst DivEvent = styled.div`\n  border: 1px solid black;\n  width: 290px;\n  padding: 16px;\n`;\n\nconst DivRegisterView = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst H1 = styled.h1`\n  left: 420px;\n  top: 400px;\n  font-size: 24px;\n  margin: 0;\n`;\n\nconst H2 = styled.h2``;\nconst P = styled.p`\n  margin-bottom: 50px;\n`;\n\nconst Section = styled.section``;\nconst DivPagination = styled.div`\n  margin-top: 30px;\n  text-align: center;\n  padding-bottom: 80px;\n`;\n\nconst PaginationButton = styled.button`\n  padding: 5px 10px;\n  margin: 0 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n\n  background-color: #3470ff;\n  color: #ffffff;\n  cursor: pointer;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  &:hover:not(:disabled) {\n    background-color: #0b44cd;\n  }\n`;\n\nconst SpanPagination = styled.span`\n  margin: 0 10px;\n`;\nconst ButtonSort = styled.button`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  /* line-height: 143%; */\n  border-radius: 5px;\n\n  width: 136px;\n  height: 48px;\n  background-color: #3470ff;\n  color: #ffffff;\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\nconst DivButton = styled.div`\n  display: flex;\n  padding-right: 460px;\n\n  background-color: rgba(255, 255, 255, 0.9);\n  gap: 200px;\n  align-items: center;\n  padding-left: 10px;\n  padding-bottom: 20px;\n  padding-top: 20px;\n`;\nconst DivSortButton = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 50px;\n`;\n\nconst BackToTopButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  display: ${props => (props.visible ? 'block' : 'none')};\n  background-color: #3470ff;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  cursor: pointer;\n  font-size: 24px;\n  line-height: 50px;\n  text-align: center;\n  z-index: 1000;\n`;\n\nexport {\n  SpanPagination,\n  DivEvents,\n  DivEvent,\n  DivRegisterView,\n  H1,\n  H2,\n  P,\n  Section,\n  DivPagination,\n  PaginationButton,\n  ButtonSort,\n  DivButton,\n  DivSortButton,\n  Div,\n  BackToTopButton,\n};\n","import axios from 'axios';\n\nconst baseURL = 'https://api.eventyay.com/v1';\n\nconst getAuthToken = async () => {\n  try {\n    const response = await axios.post(\n      'https://api.eventyay.com/v1/auth/login',\n      {\n        email: 'a.g.sulimko@gmail.com',\n        password: '',\n      }\n      //  {\n      //  headers: {\n      //    'Content-Type': 'application/json',\n      //      Authorization: \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY4MzUxNDYsIm5iZiI6MTcxNjgzNTE0NiwianRpIjoiZDEzNGQ4MmQtNTQzNy00OTUyLTk1MGUtZWE2MGI4NzFjYjc4IiwiZXhwIjoxNzE2OTIxNTQ2LCJpZGVudGl0eSI6MzcwMTQsImZyZXNoIjp0cnVlLCJ0eXBlIjoiYWNjZXNzIiwiY3NyZiI6ImJiNDhjM2M5LWI0MTEtNGNjMy05NTQwLTk1ZTgyN2RmYWY0YiJ9.6ymH3UIstiA-HjeHnBR_jBZWmvCfKgcUlgi-M4YE4xs',\n      //   },\n      //  }\n    );\n    const authToken = response.data.access_token;\n    console.log(response);\n    return authToken;\n  } catch (error) {\n    console.error('Error fetching auth token:', error);\n    throw error;\n  }\n};\n\nexport const getAllEventyay = async page => {\n  try {\n    const authToken = await getAuthToken(); // Получение актуального токена\n    const response = await axios.get(`${baseURL}/events`, {\n      headers: {\n        Authorization: `JWT ${authToken}`,\n      },\n      params: {\n        'location-name': 'Vienna',\n        'page[size]': 50,\n        'page[number]': page,\n      },\n    });\n    console.log('events:', response.data.data);\n    return response.data.data;\n  } catch (error) {\n    if (error.response) {\n      console.error('Response error:', error.response.data);\n    } else if (error.request) {\n      console.error('Request error:', error.request);\n    } else {\n      console.error('Error', error.message);\n    }\n    throw error;\n  }\n};\n\n// import axios from 'axios';\n\n// const baseURL = 'https://api.eventyay.com/v1';\n\n// const accessToken =\n//   'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY4MDE3MTUsIm5iZiI6MTcxNjgwMTcxNSwianRpIjoiMzgzMTYwMjUtMWM1ZS00MzExLTkzZGYtMjQyZDIyNTIyOWFiIiwiZXhwIjoxNzE2ODg4MTE1LCJpZGVudGl0eSI6MzcwMTQsImZyZXNoIjp0cnVlLCJ0eXBlIjoiYWNjZXNzIiwiY3NyZiI6ImE5Y2NjZWUzLTUzZGMtNDNmMy1iZDNiLWU3ZjQ4YjJlMGNkYyJ9.B678Sl9L683zg7vd_0Jq_dcnnaF0xBuokO4ioSByAlA';\n\n// export const getAllEventyay = async page => {\n//   // const today = new Date();\n//   // const formattedDate = today.toISOString().split('T')[0]; // Преобразуем дату в формат YYYY-MM-DD\n\n//   const url = `${baseURL}/events`;\n\n//   // const searchParams = new URLSearchParams(); //\n//   // searchParams.append('location-name', 'Vienna');\n//   // searchParams.append('limit', 100);\n//   // searchParams.append('filter[starts_at][gte]', formattedDate); // Добавляем фильтр по дате\n\n//   try {\n//     const response = await axios.get(url, {\n//       headers: {\n//         Authorization: `JWT ${accessToken}`,\n//       },\n//       params: {\n//         'location-name': 'Vienna',\n//         'page[size]': 50,\n//         'page[number]': page,\n//       },\n//     });\n//     console.log(' events:', response.data.data);\n//     return response.data.data;\n//   } catch (error) {\n//     if (error.response) {\n//       console.error('Response error:', error.response.data);\n//     } else if (error.request) {\n//       console.error('Request error:', error.request);\n//     } else {\n//       console.error('Error', error.message);\n//     }\n//     throw error;\n//   }\n// };\n\n// import axios from 'axios';\n\n// const baseURL = 'https://api.eventyay.com/v1';\n\n// const accessToken =\n//   'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY4MDE3MTUsIm5iZiI6MTcxNjgwMTcxNSwianRpIjoiMzgzMTYwMjUtMWM1ZS00MzExLTkzZGYtMjQyZDIyNTIyOWFiIiwiZXhwIjoxNzE2ODg4MTE1LCJpZGVudGl0eSI6MzcwMTQsImZyZXNoIjp0cnVlLCJ0eXBlIjoiYWNjZXNzIiwiY3NyZiI6ImE5Y2NjZWUzLTUzZGMtNDNmMy1iZDNiLWU3ZjQ4YjJlMGNkYyJ9.B678Sl9L683zg7vd_0Jq_dcnnaF0xBuokO4ioSByAlA';\n\n// export const getAllEventyay = async () => {\n//   const url = `${baseURL}/events`;\n\n//   const fetchEvents = async page => {\n//     try {\n//       const response = await axios.get(url, {\n//         headers: {\n//           Authorization: `JWT ${accessToken}`,\n//         },\n//         params: {\n//           'location-name': 'Vienna',\n//           'page[size]': 25,\n//           'page[number]': page,\n//         },\n//       });\n//       return response.data.data;\n//     } catch (error) {\n//       if (error.response) {\n//         console.error('Response error:', error.response.data);\n//       } else if (error.request) {\n//         console.error('Request error:', error.request);\n//       } else {\n//         console.error('Error', error.message);\n//       }\n//       throw error;\n//     }\n//   };\n\n//   try {\n//     const [page1, page2] = await Promise.all([fetchEvents(1), fetchEvents(2)]);\n//     const allEvents = [...page1, ...page2];\n//     console.log('Fetched events:', allEvents);\n//     return allEvents;\n//   } catch (error) {\n//     console.error('Error fetching events:', error);\n//     throw error;\n//   }\n// };\n","// infinite scroll pagination (бесконечная прокрутка страниц)\n\n// Events.jsx\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  deleteEvent,\n  getAllEvents,\n  getEvents,\n  // postEventToResource,\n} from \"api/api\";\nimport {\n  H1,\n  Section,\n  DivEvents,\n  DivEvent,\n  DivRegisterView,\n  H2,\n  P,\n  DivButton,\n  ButtonSort,\n  DivSortButton,\n  Div,\n} from \"./Events.styled\";\nimport { getAllEventyay } from \"api/apiEventyay\";\n\nconst LinkRegisterView = styled(Link)`\n  color: #3470ff;\n  font-weight: 600;\n\n  &:hover {\n    color: #0b44cd;\n  }\n\n  &:focus {\n    color: #0b44cd;\n  }\n`;\n\nconst BackToTopButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  display: ${(props) => (props.$visible ? \"block\" : \"none\")};\n  background-color: #3470ff;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  cursor: pointer;\n  font-size: 24px;\n  line-height: 50px;\n  text-align: center;\n  z-index: 1000;\n`;\n\nconst Events = () => {\n  const location = useLocation();\n  const [events, setEvents] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortBy, setSortBy] = useState(\"\");\n  const [resetFilters, setResetFilters] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [showBackToTop, setShowBackToTop] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n\n  // const accessToken =\n  //   \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY4MDE3MTUsIm5iZiI6MTcxNjgwMTcxNSwianRpIjoiMzgzMTYwMjUtMWM1ZS00MzExLTkzZGYtMjQyZDIyNTIyOWFiIiwiZXhwIjoxNzE2ODg4MTE1LCJpZGVudGl0eSI6MzcwMTQsImZyZXNoIjp0cnVlLCJ0eXBlIjoiYWNjZXNzIiwiY3NyZiI6ImE5Y2NjZWUzLTUzZGMtNDNmMy1iZDNiLWU3ZjQ4YjJlMGNkYyJ9.B678Sl9L683zg7vd_0Jq_dcnnaF0xBuokO4ioSByAlA\";\n\n  // fetch(\"https://api.eventyay.com/v1/events\", {\n  //   method: \"GET\",\n  //   headers: {\n  //     Authorization: `JWT ${accessToken}`,\n  //     params: {\n  //       \"location-name\": \"Vienna\",\n  //       \"page[size]\": 50, // Установите размер страницы\n  //       // \"page[number]\": page, // Указание номера страницы\n  //     },\n  //   },\n  // })\n  //   .then((response) => response.json())\n  //   .then((data) => console.log(data.data[0].attributes.name))\n  //   .catch((error) => console.error(\"Error:\", error));\n\n  const fetchEvents = async (page, sortBy, reset = false) => {\n    setLoading(true);\n    try {\n      const results = await getEvents(page, sortBy);\n      if (results.length > 0) {\n        setEvents((prevEvents) =>\n          reset ? results : [...prevEvents, ...results]\n        );\n      } else {\n        setHasMore(false); // No more events to load\n      }\n    } catch (err) {\n      console.log(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const postEventToResource = async (event) => {\n    try {\n      const response = await axios.post(\n        \"https://66430a433c01a059ea213b70.mockapi.io/api/events\",\n        event\n      );\n      console.log(\"Event added:\", response.data);\n    } catch (error) {\n      console.error(\"Error adding event:\", error);\n      throw error;\n    }\n  };\n\n  // const fetchAllEventyay = async () => {\n  //   await clearEventCollection();\n  //   try {\n  //     const results = await getAllEventyay();\n  //     console.log(\"Fetched events:\", results);\n\n  //     for (const event of results) {\n  //       // console.log(\"event.id\", event.id);\n  //       // console.log(\"events\", events);\n\n  //       const eventData = {\n  //         title: event.attributes.name,\n  //         description: event.attributes[\"location-name\"],\n  //         // description: event.attributes.description,\n  //         eventdate: new Date(event.attributes[\"starts-at\"]).getTime(),\n  //         organizer: event.attributes[\"owner-name\"],\n  //         id_event: event.id,\n  //         id: event.id,\n  //       };\n\n  //       await postEventToResource(eventData);\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error fetching events:\", error);\n  //     // Handle error\n  //   }\n  // };\n\n  const fetchAllEventyay = async () => {\n    await clearEventCollection();\n    try {\n      const results = await getAllEventyay();\n      console.log(\"Fetched events:\", results);\n\n      const addedEventIds = new Set(); // Для отслеживания уже добавленных id_event\n\n      for (const event of results) {\n        const eventData = {\n          title: event.attributes.name,\n          description: event.attributes[\"location-name\"],\n          eventdate: new Date(event.attributes[\"starts-at\"]).getTime(),\n          organizer: event.attributes[\"owner-name\"],\n          id_event: event.id,\n          id: event.id,\n        };\n\n        // Проверяем, добавлено ли уже это событие\n        if (!addedEventIds.has(eventData.id_event)) {\n          await postEventToResource(eventData);\n          addedEventIds.add(eventData.id_event); // Добавляем id_event в Set\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n    }\n  };\n\n  const clearEventCollection = async () => {\n    try {\n      const events = await getAllEvents();\n      console.log(\"events=\", events);\n      for (const event of events) {\n        // console.log(\"event=\", event);\n\n        await deleteEvent(event.id);\n      }\n\n      console.log(\"Event collection cleared.\");\n\n      setEvents([]);\n    } catch (error) {\n      console.error(\"Error clearing event collection:\", error.message);\n\n      throw error;\n    }\n  };\n\n  // useEffect(() => {\n  //   fetchAllEventyay();\n  //   // eslint-disable-next-line\n  // }, []);\n\n  useEffect(() => {\n    fetchAllEventyay(); // Вызываем сразу при монтировании\n\n    const interval = setInterval(() => {\n      fetchAllEventyay(); // Затем вызываем каждые 10 дней\n\n      // Если требуется обновление именно раз в 10 дней,\n      // то можно установить интервал в миллисекундах как 10 * 24 * 60 * 60 * 1000\n    }, 10 * 24 * 60 * 60 * 1000); // 10 дней в миллисекундах\n\n    return () => clearInterval(interval); // Очищаем интервал при размонтировании компонента\n    // eslint-disable-next-line\n  }, []); // Пустой массив зависимостей, чтобы выполнить эффект только один раз при монтировании\n\n  useEffect(() => {\n    const initialFetch = async () => {\n      setEvents([]);\n      setCurrentPage(1);\n      setHasMore(true);\n      await fetchEvents(1, sortBy, true);\n    };\n    initialFetch();\n    // eslint-disable-next-line\n  }, [sortBy, resetFilters]);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (\n        window.innerHeight + document.documentElement.scrollTop >=\n          document.documentElement.offsetHeight - 100 &&\n        !loading &&\n        hasMore\n      ) {\n        setCurrentPage((prevPage) => prevPage + 1);\n      }\n      if (window.scrollY > 100) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n      if (window.scrollY > 300) {\n        setShowBackToTop(true);\n      } else {\n        setShowBackToTop(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [loading, hasMore]);\n\n  useEffect(() => {\n    if (currentPage > 1) {\n      fetchEvents(currentPage, sortBy);\n    }\n    // eslint-disable-next-line\n  }, [currentPage]);\n\n  const handleSortByTitle = () => {\n    setSortBy(\"title\");\n  };\n\n  const handleSortEventDate = () => {\n    setSortBy(\"eventdate\");\n  };\n\n  const handleSortByOrganizer = () => {\n    setSortBy(\"organizer\");\n  };\n\n  const handleResetFilters = () => {\n    setResetFilters((prevState) => !prevState);\n    setSortBy(\"\");\n  };\n\n  const handleBackToTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  return (\n    <>\n      <Section>\n        <Div>\n          <DivButton\n            style={{ position: \"fixed\" }}\n            className={scrolled ? \"scrolled\" : \"\"}\n          >\n            <DivSortButton>\n              <H1>Events</H1>\n              <ButtonSort onClick={handleSortByTitle}>Sort by title</ButtonSort>\n              <ButtonSort onClick={handleSortEventDate}>\n                Sort by event date\n              </ButtonSort>\n              <ButtonSort onClick={handleSortByOrganizer}>\n                Sort by organizer\n              </ButtonSort>\n            </DivSortButton>\n            <ButtonSort onClick={handleResetFilters}>Reset Filters</ButtonSort>\n          </DivButton>\n        </Div>\n\n        <DivEvents className={\"css.events\"}>\n          {events && events.length > 0 ? (\n            events.map((event, index) => (\n              <DivEvent key={index} className={\"css.event_div\"}>\n                <H2>{event.title}</H2>\n                <P>{event.description}</P>\n                <DivRegisterView>\n                  <LinkRegisterView\n                    to={`/register/${event.id}`}\n                    state={{\n                      from: location,\n                      title: event.title,\n                    }}\n                  >\n                    Register\n                  </LinkRegisterView>\n\n                  <LinkRegisterView\n                    to={`/view/${event.id}`}\n                    state={{\n                      from: location,\n                      title: event.title,\n                    }}\n                  >\n                    View\n                  </LinkRegisterView>\n                </DivRegisterView>\n              </DivEvent>\n            ))\n          ) : (\n            <p>No events found</p>\n          )}\n          {loading && <p>Loading more events...</p>}\n        </DivEvents>\n        <BackToTopButton $visible={showBackToTop} onClick={handleBackToTop}>\n          ↑\n        </BackToTopButton>\n      </Section>\n    </>\n  );\n};\n\nexport default Events;\n"],"names":["axios","getAllEvents","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","sortBy","url","response","_context","prev","next","URL","searchParams","append","toString","sent","abrupt","data","t0","console","error","message","stop","_x","apply","arguments","getEvents","_ref2","_callee2","page","_context2","_x2","_x3","getViews","_ref4","_callee4","_context4","postViews","_ref5","_callee5","userData","fullName","email","dateOfBirth","whereHeard","event","_context5","_x5","putViews","_ref6","_callee6","id","_context6","concat","_x6","_x7","deleteEvent","_ref7","_callee7","_context7","log","status","_x8","_x9","Div","styled","_templateObject","_taggedTemplateLiteral","DivEvents","_templateObject2","DivEvent","_templateObject3","DivRegisterView","_templateObject4","H1","_templateObject5","H2","_templateObject6","P","_templateObject7","Section","_templateObject8","ButtonSort","_templateObject9","_templateObject10","_templateObject11","_templateObject12","DivButton","_templateObject13","DivSortButton","_templateObject14","getAuthToken","_templateObject15","props","visible","authToken","password","access_token","getAllEventyay","headers","Authorization","params","request","LinkRegisterView","Link","BackToTopButton","$visible","location","useLocation","_useState","useState","_useState2","_slicedToArray","events","setEvents","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","setSortBy","_useState7","_useState8","resetFilters","setResetFilters","_useState9","_useState10","loading","setLoading","_useState11","_useState12","hasMore","setHasMore","_useState13","_useState14","showBackToTop","setShowBackToTop","_useState15","_useState16","scrolled","setScrolled","fetchEvents","reset","results","_args","length","undefined","prevEvents","_toConsumableArray","finish","postEventToResource","fetchAllEventyay","_ref3","_callee3","addedEventIds","_iterator","_step","eventData","_context3","clearEventCollection","Set","_createForOfIteratorHelper","s","n","done","value","title","attributes","name","description","eventdate","Date","getTime","organizer","id_event","has","add","e","f","t1","_events","_iterator2","_step2","useEffect","interval","setInterval","clearInterval","initialFetch","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","prevPage","scrollY","addEventListener","removeEventListener","_jsx","_Fragment","children","_jsxs","style","position","className","onClick","prevState","map","index","to","state","from","scrollTo","top","behavior"],"sourceRoot":""}