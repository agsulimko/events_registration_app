{"version":3,"file":"static/js/280.51c5af8f.chunk.js","mappings":"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","sources":["api/api.js","pages/Events.styled.js","pages/Events.module.css","pages/Events.jsx"],"sourcesContent":["// api.js\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://66430a433c01a059ea213b70.mockapi.io/api';\n\nexport const getEvents = async (page, make) => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  if (page) {\n    url.searchParams.append('page', page);\n  }\n  url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n\nexport const getViews = async (page, make) => {\n  const url = new URL('/users', axios.defaults.baseURL);\n  // if (page) {\n  //   url.searchParams.append('page', page);\n  // }\n  // url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const postViews = async userData => {\n  // Принимаем объект userData с данными пользователя\n  const { fullName, email, dateOfBirth, whereHeard, event } = userData; // Извлекаем данные из userData\n\n  // Преобразуем registerId в массив, если он представлен строкой\n\n  const url = new URL('/users', axios.defaults.baseURL);\n  // if (page) {\n  //   url.searchParams.append('page', page);\n  // }\n  // url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.post(url.toString(), {\n      fullName: fullName,\n      email: email,\n      dateOfBirth: dateOfBirth,\n      whereHeard: whereHeard,\n      event: event,\n    });\n\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const getAllEvents = async () => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  // if (page) {\n  //   url.searchParams.append('page', page);\n  // }\n  // url.searchParams.append('limit', 12);\n  // if (make) {\n  //   url.searchParams.append('make', make);\n  // }\n\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n","import styled from 'styled-components';\nconst DivEvents = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  justify-content: center;\n`;\nconst DivEvent = styled.div`\n  border: 1px solid black;\n  width: 290px;\n  padding: 16px;\n`;\n\nconst DivRegisterView = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst H1 = styled.h1`\n  /* position: absolute; */\n  left: 420px;\n  top: 400px;\n  font-size: 24px;\n\n  margin: 40px 0 40px 0;\n  padding-left: 12px;\n`;\n\nconst H2 = styled.h2``;\nconst P = styled.p`\n  margin-bottom: 50px;\n`;\n\nconst Section = styled.section`\n  /* position: relative; */\n`;\nconst DivPagination = styled.div`\n  margin-top: 30px;\n  text-align: center;\n  padding-bottom: 80px;\n`;\n\nconst PaginationButton = styled.button`\n  padding: 5px 10px;\n  margin: 0 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background-color: transparent;\n  color: black;\n  cursor: pointer;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  &:hover:not(:disabled) {\n    background-color: #f0f0f0;\n  }\n`;\n\nconst SpanPagination = styled.span`\n  margin: 0 10px;\n`;\n\nexport {\n  SpanPagination,\n  DivEvents,\n  DivEvent,\n  DivRegisterView,\n  H1,\n  H2,\n  P,\n  Section,\n  DivPagination,\n  PaginationButton,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","// Events.jsx\nimport { getAllEvents, getEvents } from \"api/api\";\nimport {\n  H1,\n  Section,\n  DivEvents,\n  DivEvent,\n  DivRegisterView,\n  H2,\n  P,\n  DivPagination,\n  SpanPagination,\n  PaginationButton,\n} from \"./Events.styled\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport css from \"./Events.module.css\";\nimport styled from \"styled-components\";\nconst LinkRegisterView = styled(Link)`\n  color: #3470ff;\n  font-weight: 600;\n\n  &:hover {\n    color: #0b44cd;\n  }\n\n  &:focus {\n    color: #0b44cd;\n    /* outline: none; */\n  }\n`;\n\nconst Events = () => {\n  const location = useLocation();\n  const [events, setEvents] = useState([]);\n\n  const [totalPages, setTotalPages] = useState(1);\n  const [lengthArray, setLengthArray] = useState(0);\n\n  const [currentPage, setCurrentPage] = useState(\n    parseInt(localStorage.getItem(\"currentPage\"), 10) || 1\n  );\n\n  const fetchAllEvents = async (page) => {\n    try {\n      const results = await getAllEvents();\n\n      setLengthArray(results.length);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  const fetchEvents = async (page) => {\n    try {\n      const results = await getEvents(page);\n\n      setEvents(results);\n      setTotalPages(Math.ceil(lengthArray / results.length));\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  useEffect(() => {\n    // Сначала получаем значение из localStorage, если оно есть\n    const currentPageFromStorage = parseInt(\n      localStorage.getItem(\"currentPage\"),\n      10\n    );\n\n    // Если значение есть в localStorage и оно отличается от текущего значения, обновляем currentPage\n    if (currentPageFromStorage && currentPageFromStorage !== currentPage) {\n      setCurrentPage(currentPageFromStorage);\n    }\n    fetchAllEvents();\n    fetchEvents(currentPage);\n    // eslint-disable-next-line\n  }, [currentPage, totalPages]);\n\n  const handleNextPage = () => {\n    const nextPage = currentPage + 1; // Увеличиваем currentPage\n    setCurrentPage(nextPage); // Обновляем текущую страницу\n    localStorage.setItem(\"currentPage\", nextPage); // Сохраняем новое значение в localStorage\n  };\n\n  const handlePrevPage = () => {\n    const prevPage = currentPage - 1; // Уменьшаем currentPage\n    setCurrentPage(prevPage); // Обновляем текущую страницу\n    localStorage.setItem(\"currentPage\", prevPage); // Сохраняем новое значение в\n  };\n\n  return (\n    <>\n      <Section>\n        <H1>Events</H1>\n\n        <DivEvents className={css.events}>\n          {events && events.length > 0 ? (\n            events.map((event, index) => {\n              return (\n                <DivEvent key={index} className={css.event_div}>\n                  <H2>{event.title}</H2>\n                  <P>{event.description}</P>\n                  <DivRegisterView>\n                    <LinkRegisterView\n                      to={`/register/${event.id}`}\n                      state={{ from: location }}\n                    >\n                      Register\n                    </LinkRegisterView>\n                    <LinkRegisterView\n                      to={`/view/${event.id}`}\n                      state={{ from: location }}\n                    >\n                      View\n                    </LinkRegisterView>\n                  </DivRegisterView>\n                </DivEvent>\n              );\n            })\n          ) : (\n            <p>No events found</p>\n          )}\n        </DivEvents>\n\n        <DivPagination className={css.pagination}>\n          <PaginationButton\n            onClick={handlePrevPage}\n            disabled={currentPage === 1}\n          >\n            Previous\n          </PaginationButton>\n          <SpanPagination className={css.span_pagination}>\n            {Array.from({ length: totalPages }, (_, index) => (\n              <span\n                key={index}\n                style={{\n                  color: currentPage === index + 1 ? \"#3470ff\" : \"inherit\",\n                }}\n              >\n                {index + 1}\n                {index !== totalPages - 1 ? \" \" : \"\"}\n              </span>\n            ))}\n          </SpanPagination>\n          <PaginationButton\n            onClick={handleNextPage}\n            disabled={currentPage === totalPages}\n          >\n            Next\n          </PaginationButton>\n        </DivPagination>\n      </Section>\n    </>\n  );\n};\nexport default Events;\n"],"names":["axios","getEvents","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","page","make","url","response","_context","prev","next","URL","searchParams","append","toString","sent","abrupt","data","t0","console","error","message","stop","_x","_x2","apply","arguments","getViews","_ref2","_callee2","_context2","_x3","_x4","postViews","_ref3","_callee3","userData","fullName","email","dateOfBirth","whereHeard","event","_context3","_x5","getAllEvents","_ref4","_callee4","_context4","DivEvents","styled","_templateObject","_taggedTemplateLiteral","DivEvent","_templateObject2","DivRegisterView","_templateObject3","H1","_templateObject4","H2","_templateObject5","P","_templateObject6","Section","_templateObject7","DivPagination","_templateObject8","PaginationButton","_templateObject9","SpanPagination","_templateObject10","LinkRegisterView","Link","location","useLocation","_useState","useState","_useState2","_slicedToArray","events","setEvents","_useState3","_useState4","totalPages","setTotalPages","_useState5","_useState6","lengthArray","setLengthArray","_useState7","parseInt","localStorage","getItem","_useState8","currentPage","setCurrentPage","fetchAllEvents","results","length","log","fetchEvents","Math","ceil","useEffect","currentPageFromStorage","_jsx","_Fragment","children","_jsxs","className","css","map","index","title","description","to","concat","id","state","from","onClick","prevPage","setItem","disabled","Array","_","style","color","nextPage"],"sourceRoot":""}