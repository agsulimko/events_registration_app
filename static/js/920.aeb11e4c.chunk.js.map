{"version":3,"file":"static/js/920.aeb11e4c.chunk.js","mappings":"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","sources":["api/api.js","pages/Events.styled.js","api/apiEventyay.js","pages/Events.jsx"],"sourcesContent":["// api.js\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://66430a433c01a059ea213b70.mockapi.io/api';\n\n// export const postEventToResource = async event => {\n//   try {\n//     const response = await axios.post('/events', event);\n\n//     console.log('Event added:', response.data);\n//   } catch (error) {\n//     console.error('Error adding event:', error);\n//     throw error;\n//   }\n// };\n\nexport const getAllEvents = async sortBy => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  if (sortBy) {\n    url.searchParams.append('sortBy', sortBy);\n  }\n  try {\n    const response = await axios.get(url.toString());\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\n\nexport const getEvents = async (page, sortBy) => {\n  const url = new URL('/events', axios.defaults.baseURL);\n  if (page) {\n    url.searchParams.append('page', page);\n  }\n  url.searchParams.append('limit', 40);\n  if (sortBy) {\n    url.searchParams.append('sortBy', sortBy);\n  }\n\n  try {\n    const response = await axios.get(url.toString());\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch events:', error.message);\n    throw error;\n  }\n};\nexport const postEvents = async userData => {\n  const { title, description, eventdate, organizer } = userData;\n  const url = new URL('/users', axios.defaults.baseURL);\n\n  try {\n    const response = await axios.post(url.toString(), {\n      title: title,\n      description: description,\n      eventdate: eventdate,\n      organizer: organizer,\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const getViews = async () => {\n  const url = new URL('/users', axios.defaults.baseURL);\n\n  try {\n    const response = await axios.get(url.toString());\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const postViews = async userData => {\n  const { fullName, email, dateOfBirth, whereHeard, event } = userData;\n  const url = new URL('/users', axios.defaults.baseURL);\n\n  try {\n    const response = await axios.post(url.toString(), {\n      fullName: fullName,\n      email: email,\n      dateOfBirth: dateOfBirth,\n      whereHeard: whereHeard,\n      event: event,\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const putViews = async (id, event) => {\n  const url = new URL(`/users/${id}`, axios.defaults.baseURL);\n\n  try {\n    const response = await axios.put(url.toString(), {\n      event: event,\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch users:', error.message);\n    throw error;\n  }\n};\n\nexport const deleteEvent = async (id, event) => {\n  const url = new URL(`/events/${id}`, axios.defaults.baseURL);\n\n  try {\n    await axios.delete(url.toString());\n\n    // console.log('Event deleted:', response.data);\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      console.log(`Event with id ${id} not found, skipping deletion`);\n    } else {\n      console.error('Error deleting event:', error);\n\n      throw error;\n    }\n  }\n};\n\n// export const deleteEvent = async id => {\n//   try {\n//     await axios.delete(`/events/${id}`);\n//     console.log(`Event with id ${id} deleted`);\n//   } catch (error) {\n//     if (error.response && error.response.status === 404) {\n//       console.warn(`Event with id ${id} not found, skipping deletion`);\n//     } else {\n//       console.error('Error deleting event:', error);\n//       throw error;\n//     }\n//   }\n// };\n","import styled from 'styled-components';\n\nconst Div = styled.div`\n  padding-top: 55px;\n  background-color: white;\n`;\nconst DivEvents = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  justify-content: center;\n  padding-top: 90px;\n`;\nconst DivEvent = styled.div`\n  border: 1px solid black;\n  width: 290px;\n  padding: 16px;\n`;\n\nconst DivRegisterView = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst H1 = styled.h1`\n  left: 420px;\n  top: 400px;\n  font-size: 24px;\n  margin: 0;\n`;\n\nconst H2 = styled.h2``;\nconst P = styled.p`\n  margin-bottom: 50px;\n`;\n\nconst Section = styled.section``;\nconst DivPagination = styled.div`\n  margin-top: 30px;\n  text-align: center;\n  padding-bottom: 80px;\n`;\n\nconst PaginationButton = styled.button`\n  padding: 5px 10px;\n  margin: 0 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n\n  background-color: #3470ff;\n  color: #ffffff;\n  cursor: pointer;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  &:hover:not(:disabled) {\n    background-color: #0b44cd;\n  }\n`;\n\nconst SpanPagination = styled.span`\n  margin: 0 10px;\n`;\nconst ButtonSort = styled.button`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  /* line-height: 143%; */\n  border-radius: 5px;\n\n  width: 136px;\n  height: 48px;\n  background-color: #3470ff;\n  color: #ffffff;\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\nconst DivButton = styled.div`\n  display: flex;\n  padding-right: 460px;\n\n  background-color: rgba(255, 255, 255, 0.9);\n  gap: 200px;\n  align-items: center;\n  padding-left: 10px;\n  padding-bottom: 20px;\n  padding-top: 20px;\n`;\nconst DivSortButton = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 50px;\n`;\n\nconst BackToTopButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  display: ${props => (props.visible ? 'block' : 'none')};\n  background-color: #3470ff;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  cursor: pointer;\n  font-size: 24px;\n  line-height: 50px;\n  text-align: center;\n  z-index: 1000;\n`;\n\nexport {\n  SpanPagination,\n  DivEvents,\n  DivEvent,\n  DivRegisterView,\n  H1,\n  H2,\n  P,\n  Section,\n  DivPagination,\n  PaginationButton,\n  ButtonSort,\n  DivButton,\n  DivSortButton,\n  Div,\n  BackToTopButton,\n};\n","import axios from 'axios';\n\nconst baseURL = 'https://api.eventyay.com/v1';\n\nlet authToken = null;\nlet isFetchingToken = false;\n\nconst getAuthToken = async () => {\n  if (authToken) {\n    console.log('Using cached auth token');\n    return authToken;\n  }\n  if (isFetchingToken) {\n    // console.log('Token is already being fetched, please wait');\n    while (isFetchingToken) {\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n    return authToken;\n  }\n\n  isFetchingToken = true;\n  try {\n    // console.log('Fetching new auth token');\n    const response = await axios.post(\n      'https://api.eventyay.com/v1/auth/login',\n      {\n        email: 'events_registr@meta.ua',\n        password: 'Qwe12345',\n      }\n    );\n    authToken = response.data.access_token;\n    console.log('Auth token:', response);\n    return authToken;\n  } catch (error) {\n    console.error('Error fetching auth token:', error);\n    throw error;\n  } finally {\n    isFetchingToken = false;\n  }\n};\n\nexport const getAllEventyay = async page => {\n  try {\n    const authToken = await getAuthToken(); // Получение актуального токена\n\n    const response = await axios.get(`${baseURL}/events`, {\n      headers: {\n        Authorization: `JWT ${authToken}`,\n      },\n      params: {\n        // 'location-name': 'Vienna',\n        'page[size]': 240,\n        // 'page[number]': page,\n      },\n    });\n    console.log('events:', response.data.data);\n    return response.data.data;\n  } catch (error) {\n    if (error.response) {\n      console.error('Response error:', error.response.data);\n    } else if (error.request) {\n      console.error('Request error:', error.request);\n    } else {\n      console.error('Error', error.message);\n    }\n    throw error;\n  }\n};\n","// infinite scroll pagination (бесконечная прокрутка страниц)\n\n// Events.jsx\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  deleteEvent,\n  getAllEvents,\n  getEvents,\n  // postEventToResource,\n} from \"api/api\";\nimport {\n  H1,\n  Section,\n  DivEvents,\n  DivEvent,\n  DivRegisterView,\n  H2,\n  P,\n  DivButton,\n  ButtonSort,\n  DivSortButton,\n  Div,\n} from \"./Events.styled\";\nimport { getAllEventyay } from \"api/apiEventyay\";\n\nconst LinkRegisterView = styled(Link)`\n  color: #3470ff;\n  font-weight: 600;\n\n  &:hover {\n    color: #0b44cd;\n  }\n\n  &:focus {\n    color: #0b44cd;\n  }\n`;\n\nconst BackToTopButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  display: ${(props) => (props.$visible ? \"block\" : \"none\")};\n  background-color: #3470ff;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  cursor: pointer;\n  font-size: 24px;\n  line-height: 50px;\n  text-align: center;\n  z-index: 1000;\n`;\n\nconst Events = () => {\n  const location = useLocation();\n  const [events, setEvents] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortBy, setSortBy] = useState(\"\");\n  const [resetFilters, setResetFilters] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [showBackToTop, setShowBackToTop] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n  // const [eventyay, setEventyay] = useState([]);\n\n  // ++++++++++++++++++++++++++++++\n  const fetchEvents = async (page, sortBy, reset = false) => {\n    setLoading(true);\n    try {\n      const results = await getEvents(page, sortBy);\n      if (results.length > 0) {\n        setEvents((prevEvents) =>\n          reset ? results : [...prevEvents, ...results]\n        );\n      } else {\n        setHasMore(false); // No more events to load\n      }\n    } catch (err) {\n      console.log(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  // ++++++++++++++++++++++++++++++++\n\n  const postEventToResource = async (event) => {\n    try {\n      await axios.post(\n        \"https://66430a433c01a059ea213b70.mockapi.io/api/events\",\n        event\n      );\n    } catch (error) {\n      console.error(\"Error adding event:\", error);\n\n      throw error;\n    }\n  };\n\n  const fetchAllEventyay = async () => {\n    await clearEventCollection();\n    try {\n      const eventyay = await getAllEventyay();\n      console.log(\"Fetched events:\", eventyay);\n\n      // Получаем текущую дату и время\n      // const currentDate = new Date().getTime();\n      const currentDate = 1640000000000;\n\n      // Собираем данные для всех событий и фильтруем только будущие события\n      const eventDataList = eventyay\n        .map((event) => ({\n          title: event.attributes.name,\n          description: event.attributes[\"location-name\"],\n          eventdate: new Date(event.attributes[\"starts-at\"]).getTime(),\n          organizer: event.attributes[\"owner-name\"],\n          id_event: event.id,\n          image: event.attributes[\"thumbnail-image-url\"],\n          id: event.id,\n        }))\n        .filter((event) => event.eventdate >= currentDate); //\n\n      console.log(eventDataList);\n\n      // Создаем множество для отслеживания уникальных id_event\n      const existingEvents = await getAllEvents();\n      const existingEventIds = new Set(\n        existingEvents.map((event) => event.id_event)\n      );\n\n      // Добавляем только уникальные события в коллекцию\n      for (const eventData of eventDataList) {\n        if (!existingEventIds.has(eventData.id_event)) {\n          await postEventToResource(eventData);\n          // Обновляем состояние events только после успешного добавления нового события\n          setEvents((prevEvents) => [...prevEvents, eventData]);\n          // Добавляем id_event в множество существующих id_event\n          existingEventIds.add(eventData.id_event);\n        } else {\n          console.log(\n            `Duplicate event found with id_event: ${eventData.id_event}`\n          );\n        }\n      }\n\n      await fetchEvents(1, sortBy, true);\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n    }\n  };\n\n  const clearEventCollection = async () => {\n    try {\n      const events = await getAllEvents();\n\n      // console.log(\"events=\", events);\n      for (const event of events) {\n        //  console.log(\"event=\", event);\n\n        await deleteEvent(event.id);\n      }\n\n      console.log(\"Event collection cleared.\");\n\n      setEvents([]);\n    } catch (error) {\n      console.error(\"Error clearing event collection:\", error.message);\n\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    // fetchAllEventyay(); // Вызываем сразу при монтировании\n\n    const interval = setInterval(() => {\n      fetchAllEventyay(); // Затем вызываем каждые 10 дней\n      // Если требуется обновление именно раз в 10 дней,\n      // то можно установить интервал в миллисекундах как 10 * 24 * 60 * 60 * 1000\n    }, 10 * 24 * 60 * 60 * 1000); // 10 дней в миллисекундах\n\n    return () => clearInterval(interval); // Очищаем интервал при размонтировании компонента\n    // eslint-disable-next-line\n  }, []); // Пустой массив зависимостей, чтобы выполнить эффект только один раз при монтировании\n\n  useEffect(() => {\n    const initialFetch = async () => {\n      setEvents([]);\n      setCurrentPage(1);\n      setHasMore(true);\n      await fetchEvents(1, sortBy, true);\n    };\n    initialFetch();\n    // eslint-disable-next-line\n  }, [sortBy, resetFilters]);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (\n        window.innerHeight + document.documentElement.scrollTop >=\n          document.documentElement.offsetHeight - 100 &&\n        !loading &&\n        hasMore\n      ) {\n        setCurrentPage((prevPage) => prevPage + 1);\n      }\n      if (window.scrollY > 100) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n      if (window.scrollY > 300) {\n        setShowBackToTop(true);\n      } else {\n        setShowBackToTop(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [loading, hasMore]);\n\n  useEffect(() => {\n    if (currentPage > 1) {\n      fetchEvents(currentPage, sortBy);\n    }\n    // eslint-disable-next-line\n  }, [currentPage]);\n\n  const handleSortByTitle = () => {\n    setSortBy(\"title\");\n  };\n\n  const handleSortEventDate = () => {\n    setSortBy(\"eventdate\");\n  };\n  const handleSortByOrganizer = () => {\n    setSortBy(\"organizer\");\n  };\n\n  const handleResetFilters = () => {\n    setResetFilters((prevState) => !prevState);\n    setSortBy(\"\");\n\n    fetchAllEventyay(); // Вызываем сразу при монтировании\n  };\n  const handleUpdate = () => {\n    fetchAllEventyay();\n  };\n\n  const handleBackToTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n  // console.log(events);\n  return (\n    <>\n      <Section>\n        <Div>\n          <DivButton\n            style={{ position: \"fixed\" }}\n            className={scrolled ? \"scrolled\" : \"\"}\n          >\n            <DivSortButton>\n              <H1>Events</H1>\n              <ButtonSort onClick={handleSortByTitle}>Sort by title</ButtonSort>\n              <ButtonSort onClick={handleSortEventDate}>\n                Sort by event date\n              </ButtonSort>\n              <ButtonSort onClick={handleSortByOrganizer}>\n                Sort by organizer\n              </ButtonSort>\n            </DivSortButton>\n            <ButtonSort onClick={handleResetFilters}>Reset Filters</ButtonSort>\n            <ButtonSort onClick={handleUpdate}>Update events</ButtonSort>\n          </DivButton>\n        </Div>\n\n        <DivEvents className={\"css.events\"}>\n          {events && events.length > 0 ? (\n            Array.from(new Set(events.map((event) => event.id))).map(\n              (id, index) => {\n                const event = events.find((event) => event.id === id);\n                return (\n                  <DivEvent key={index} className={\"css.event_div\"}>\n                    <H2>{event.title}</H2>\n\n                    <p>\n                      {(() => {\n                        const date = new Date(event.eventdate);\n                        const hours = date\n                          .getHours()\n                          .toString()\n                          .padStart(2, \"0\");\n                        const minutes = date\n                          .getMinutes()\n                          .toString()\n                          .padStart(2, \"0\");\n                        const day = date.getDate().toString().padStart(2, \"0\");\n                        const month = (date.getMonth() + 1)\n                          .toString()\n                          .padStart(2, \"0\");\n                        const year = date.getFullYear();\n                        return `${hours}:${minutes} ${day}-${month}-${year}`;\n                      })()}\n                    </p>\n\n                    <div\n                      style={{\n                        height: 120,\n                        backgroundImage: `url(${event.image})`,\n                        backgroundPosition: \"center\",\n                        backgroundSize: \"cover\",\n                      }}\n                    ></div>\n                    <P>{event.description}</P>\n\n                    <DivRegisterView>\n                      <LinkRegisterView\n                        to={`/register/${event.id}`}\n                        state={{\n                          from: location,\n                          title: event.title,\n                          id_event: event.id_event,\n                        }}\n                      >\n                        Register\n                      </LinkRegisterView>\n\n                      <LinkRegisterView\n                        to={`/view/${event.id}`}\n                        state={{\n                          from: location,\n                          title: event.title,\n                        }}\n                      >\n                        View\n                      </LinkRegisterView>\n                    </DivRegisterView>\n                  </DivEvent>\n                );\n              }\n            )\n          ) : (\n            <p>No events found</p>\n          )}\n          {loading && <p>Loading more events...</p>}\n        </DivEvents>\n        <BackToTopButton $visible={showBackToTop} onClick={handleBackToTop}>\n          ↑\n        </BackToTopButton>\n      </Section>\n    </>\n  );\n};\n\nexport default Events;\n"],"names":["axios","getAllEvents","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","sortBy","url","response","_context","prev","next","URL","searchParams","append","toString","sent","abrupt","data","t0","console","error","message","stop","_x","apply","arguments","getEvents","_ref2","_callee2","page","_context2","_x2","_x3","getViews","_ref4","_callee4","_context4","postViews","_ref5","_callee5","userData","fullName","email","dateOfBirth","whereHeard","event","_context5","_x5","putViews","_ref6","_callee6","id","_context6","concat","_x6","_x7","deleteEvent","_ref7","_callee7","_context7","status","log","_x8","_x9","Div","styled","_templateObject","_taggedTemplateLiteral","DivEvents","_templateObject2","DivEvent","_templateObject3","DivRegisterView","_templateObject4","H1","_templateObject5","H2","_templateObject6","P","_templateObject7","Section","_templateObject8","ButtonSort","_templateObject9","_templateObject10","_templateObject11","_templateObject12","DivButton","_templateObject13","DivSortButton","_templateObject14","authToken","_templateObject15","props","visible","isFetchingToken","getAuthToken","Promise","resolve","setTimeout","password","access_token","finish","getAllEventyay","_authToken","headers","Authorization","params","request","LinkRegisterView","Link","BackToTopButton","$visible","location","useLocation","_useState","useState","_useState2","_slicedToArray","events","setEvents","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","setSortBy","_useState7","_useState8","resetFilters","setResetFilters","_useState9","_useState10","loading","setLoading","_useState11","_useState12","hasMore","setHasMore","_useState13","_useState14","showBackToTop","setShowBackToTop","_useState15","_useState16","scrolled","setScrolled","fetchEvents","reset","results","_args","length","undefined","prevEvents","_toConsumableArray","postEventToResource","fetchAllEventyay","_ref3","_callee3","eventyay","eventDataList","existingEvents","existingEventIds","_iterator","_step","_loop","clearEventCollection","map","title","attributes","name","description","eventdate","Date","getTime","organizer","id_event","image","filter","Set","_createForOfIteratorHelper","eventData","_context3","value","has","add","s","n","done","delegateYield","t1","e","f","t2","_events","_iterator2","_step2","useEffect","interval","setInterval","clearInterval","initialFetch","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","prevPage","scrollY","addEventListener","removeEventListener","_jsx","_Fragment","children","_jsxs","style","position","className","onClick","prevState","Array","from","index","find","date","hours","getHours","padStart","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","height","backgroundImage","backgroundPosition","backgroundSize","to","state","scrollTo","top","behavior"],"sourceRoot":""}